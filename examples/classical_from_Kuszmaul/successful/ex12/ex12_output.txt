Hennings-MacBook-Pro:classical_from_Kuszmaul ulfarsson$ python ex12.py
[2016-09-20 21:15:57.872741] Generating permutations from input
[2016-09-20 21:15:58.514211] Finished in 0.641s
[2016-09-20 21:15:58.514258] Enumeration is [1, 1, 2, 6, 17, 35, 64]
[2016-09-20 21:15:58.514285] Tayloring DAG
[2016-09-20 21:16:02.384959] Finished in 3.871s
[2016-09-20 21:16:02.385598] (0, 'Av([[1, 2, 3], [1, 3, 2], [2, 1, 3], [2, 3, 1], [3, 1, 2]])')
[2016-09-20 21:16:02.385626] (1, 'Av([[1, 2, 3], [1, 3, 2], [2, 1, 3], [2, 3, 1]])')
[2016-09-20 21:16:02.385650] (2, 'Av([[1, 2, 3], [1, 3, 2], [2, 1, 3], [3, 1, 2]])')
[2016-09-20 21:16:02.385661] (3, 'Av([[1, 2, 3], [1, 3, 2], [2, 1, 3], [3, 4, 1, 2]])')
[2016-09-20 21:16:02.385672] (4, 'Av([[1, 2, 3], [1, 3, 2], [2, 3, 1], [3, 1, 2]])')
[2016-09-20 21:16:02.385682] (5, 'Av([[1, 2, 3], [1, 3, 2], [2, 3, 1]])')
[2016-09-20 21:16:02.385693] (6, 'Av([[1, 2, 3], [1, 3, 2], [3, 1, 2]])')
[2016-09-20 21:16:02.385703] (7, 'Av([[1, 2, 3], [1, 3, 2], [3, 4, 1, 2]])')
[2016-09-20 21:16:02.385714] (8, 'Av([[1, 2, 3], [1, 4, 3, 2], [2, 1, 3], [2, 3, 1], [3, 1, 2]])')
[2016-09-20 21:16:02.385725] (9, 'Av([[1, 2, 3], [1, 4, 3, 2], [2, 1, 3], [2, 3, 1], [4, 1, 3, 2]])')
[2016-09-20 21:16:02.385735] (10, 'Av([[1, 2, 3], [1, 4, 3, 2], [2, 1, 3], [2, 4, 3, 1], [3, 1, 2]])')
[2016-09-20 21:16:02.385747] (11, 'Av([[1, 2, 3], [1, 4, 3, 2], [2, 1, 3], [2, 4, 3, 1], [3, 4, 1, 2], [4, 1, 3, 2]])')
[2016-09-20 21:16:02.385758] (12, 'Av([[1, 2, 3], [1, 4, 3, 2], [2, 1, 4, 3], [2, 3, 1], [3, 1, 2]])')
[2016-09-20 21:16:02.385769] (13, 'Av([[1, 2, 3], [1, 4, 3, 2], [2, 1, 4, 3], [2, 3, 1], [4, 1, 3, 2]])')
[2016-09-20 21:16:02.385780] (14, 'Av([[1, 2, 3], [1, 4, 3, 2], [2, 1, 4, 3], [2, 4, 3, 1], [3, 1, 2]])')
[2016-09-20 21:16:02.385791] (15, 'Av([[1, 2, 3], [1, 4, 3, 2], [2, 1, 4, 3], [2, 4, 3, 1], [3, 4, 1, 2], [4, 1, 3, 2]])')
[2016-09-20 21:16:02.385801] (16, 'Av([[1, 2]])')
[2016-09-20 21:16:02.385812] (17, 'Av([[1, 3, 2, 4], [1, 4, 3, 2], [2, 1, 3, 4], [2, 1, 4, 3], [2, 3, 1], [3, 1, 2]])')
[2016-09-20 21:16:02.385822] (18, 'Av([[1, 3, 2, 4], [1, 4, 3, 2], [2, 1, 3, 4], [2, 1, 4, 3], [2, 3, 1], [4, 1, 3, 2]])')
[2016-09-20 21:16:02.385834] (19, 'Av([[1, 3, 2, 4], [1, 4, 3, 2], [2, 1, 3, 4], [2, 1, 4, 3], [2, 4, 3, 1], [3, 1, 2]])')
[2016-09-20 21:16:02.385845] (20, 'Av([[1, 3, 2, 4], [2, 1, 3, 4], [2, 1, 4, 3], [2, 3, 1], [3, 1, 2], [3, 2, 1]])')
[2016-09-20 21:16:02.385855] (21, 'Av([[1, 3, 2, 4], [2, 1, 3, 4], [2, 1, 4, 3], [2, 3, 1], [3, 2, 1]])')
[2016-09-20 21:16:02.385866] (22, 'Av([[1, 3, 2, 4], [2, 1, 3, 4], [2, 1, 4, 3], [3, 1, 2], [3, 2, 1]])')
[2016-09-20 21:16:02.385876] (23, 'Av([[1, 3, 2, 4], [2, 1, 3, 4], [2, 1, 4, 3], [3, 2, 1], [3, 4, 1, 2]])')
[2016-09-20 21:16:02.385887] (24, 'Av([[1, 3, 2], [2, 1, 3, 4], [2, 3, 1], [3, 1, 2], [3, 2, 1]])')
[2016-09-20 21:16:02.385898] (25, 'Av([[1, 3, 2], [2, 1, 3, 4], [2, 3, 1], [3, 1, 2]])')
[2016-09-20 21:16:02.385908] (26, 'Av([[1, 3, 2], [2, 1, 3, 4], [2, 3, 1], [3, 2, 1]])')
[2016-09-20 21:16:02.385924] (27, 'Av([[1, 3, 2], [2, 1, 3, 4], [2, 3, 1]])')
[2016-09-20 21:16:02.385935] (28, 'Av([[1, 3, 2], [2, 1, 3, 4], [3, 1, 2], [3, 2, 1]])')
[2016-09-20 21:16:02.385945] (29, 'Av([[1, 3, 2], [2, 1, 3, 4], [3, 1, 2]])')
[2016-09-20 21:16:02.385956] (30, 'Av([[1, 3, 2], [2, 1, 3, 4], [3, 2, 1], [3, 4, 1, 2]])')
[2016-09-20 21:16:02.385987] (31, 'Av([[1, 3, 2], [2, 1, 3, 4], [3, 4, 1, 2]])')
[2016-09-20 21:16:02.386020] (32, 'Av([[1, 3, 2], [2, 1, 3], [2, 3, 1], [3, 1, 2], [3, 2, 1]])')
[2016-09-20 21:16:02.386042] (33, 'Av([[1, 3, 2], [2, 1, 3], [2, 3, 1], [3, 1, 2]])')
[2016-09-20 21:16:02.386062] (34, 'Av([[1, 3, 2], [2, 1, 3], [2, 3, 1], [3, 2, 1]])')
[2016-09-20 21:16:02.386081] (35, 'Av([[1, 3, 2], [2, 1, 3], [2, 3, 1]])')
[2016-09-20 21:16:02.386103] (36, 'Av([[1, 3, 2], [2, 1, 3], [3, 1, 2], [3, 2, 1]])')
[2016-09-20 21:16:02.386123] (37, 'Av([[1, 3, 2], [2, 1, 3], [3, 1, 2]])')
[2016-09-20 21:16:02.386142] (38, 'Av([[1, 3, 2], [2, 1, 3], [3, 2, 1], [3, 4, 1, 2]])')
[2016-09-20 21:16:02.386157] (39, 'Av([[1, 3, 2], [2, 1, 3], [3, 4, 1, 2]])')
[2016-09-20 21:16:02.386168] (40, 'Av([[1, 4, 3, 2], [2, 1, 3], [2, 3, 1], [3, 1, 2]])')
[2016-09-20 21:16:02.386179] (41, 'Av([[1, 4, 3, 2], [2, 1, 3], [2, 3, 1], [4, 1, 3, 2]])')
[2016-09-20 21:16:02.386190] (42, 'Av([[1, 4, 3, 2], [2, 1, 3], [2, 4, 3, 1], [3, 1, 2]])')
[2016-09-20 21:16:02.386201] (43, 'Av([[1, 4, 3, 2], [2, 1, 3], [2, 4, 3, 1], [3, 4, 1, 2], [4, 1, 3, 2]])')
[2016-09-20 21:16:02.386212] (44, 'Av([[2, 1, 3], [2, 3, 1], [3, 1, 2], [3, 2, 1]])')
[2016-09-20 21:16:02.386222] (45, 'Av([[2, 1, 3], [2, 3, 1], [3, 2, 1]])')
[2016-09-20 21:16:02.386233] (46, 'Av([[2, 1, 3], [3, 1, 2], [3, 2, 1]])')
[2016-09-20 21:16:02.386243] (47, 'Av([[2, 1, 3], [3, 2, 1], [3, 4, 1, 2]])')
[2016-09-20 21:16:02.386254] (48, 'Av([[2, 1]])')
[2016-09-20 21:16:02.386264] (49, 'input permutation set')
[2016-09-20 21:16:02.386276] (50, 'point permutation set')
[2016-09-20 21:16:02.386286] (51, 'None')
[2016-09-20 21:16:02.386995] Generating rules
[2016-09-20 21:16:02.387014] Generate allowed neighbors, overlap
[2016-09-20 21:16:07.596544] Generate allowed neighbors, perm prop
[2016-09-20 21:16:28.606047] Generating point rules
[2016-09-20 21:16:28.606110] Cell (5,5)
100% [##################################################]  00:00:00
[2016-09-20 21:16:28.606815] Cell (5,4)
100% [##################################################]  00:00:00
[2016-09-20 21:16:28.608088] Cell (5,3)
100% [##################################################]  00:00:00
[2016-09-20 21:16:28.611221] Cell (5,2)
100% [##################################################]  00:00:00
[2016-09-20 21:16:28.618201] Cell (5,1)
100% [##################################################]  00:00:00
[2016-09-20 21:16:28.632650] Cell (5,0)
100% [##################################################]  00:00:00
[2016-09-20 21:16:28.659623] Cell (4,5)
100% [##################################################]  00:00:00
[2016-09-20 21:16:28.698449] Cell (4,4)
100% [##################################################]  00:00:00
[2016-09-20 21:16:28.754486] Cell (4,3)
100% [##################################################]  00:00:00
[2016-09-20 21:16:28.830864] Cell (4,2)
100% [##################################################]  00:00:00
[2016-09-20 21:16:28.935436] Cell (4,1)
100% [##################################################]  00:00:00
[2016-09-20 21:16:29.072891] Cell (4,0)
100% [##################################################]  00:00:00
[2016-09-20 21:16:29.249406] Cell (3,5)
100% [##################################################]  00:00:00
[2016-09-20 21:16:29.455443] Cell (3,4)
100% [##################################################]  00:00:00
[2016-09-20 21:16:29.702334] Cell (3,3)
100% [##################################################]  00:00:00
[2016-09-20 21:16:30.030919] Cell (3,2)
100% [##################################################]  00:00:00
[2016-09-20 21:16:30.436261] Cell (3,1)
100% [##################################################]  00:00:00
[2016-09-20 21:16:30.952341] Cell (3,0)
100% [##################################################]  00:00:00
[2016-09-20 21:16:31.631706] Cell (2,5)
100% [##################################################]  00:00:00
[2016-09-20 21:16:32.237080] Cell (2,4)
100% [##################################################]  00:00:00
[2016-09-20 21:16:32.919135] Cell (2,3)
100% [##################################################]  00:00:00
[2016-09-20 21:16:33.702250] Cell (2,2)
100% [##################################################]  00:00:00
[2016-09-20 21:16:34.646423] Cell (2,1)
100% [##################################################]  00:00:01
[2016-09-20 21:16:35.757625] Cell (2,0)
100% [##################################################]  00:00:01
[2016-09-20 21:16:37.283405] Cell (1,5)
100% [##################################################]  00:00:00
[2016-09-20 21:16:38.245622] Cell (1,4)
100% [##################################################]  00:00:01
[2016-09-20 21:16:39.271099] Cell (1,3)
100% [##################################################]  00:00:01
[2016-09-20 21:16:40.381307] Cell (1,2)
100% [##################################################]  00:00:01
[2016-09-20 21:16:41.605573] Cell (1,1)
100% [##################################################]  00:00:01
[2016-09-20 21:16:43.107290] Cell (1,0)
100% [##################################################]  00:00:02
[2016-09-20 21:16:45.150455] Cell (0,5)
100% [##################################################]  00:00:00
[2016-09-20 21:16:45.864794] Cell (0,4)
100% [##################################################]  00:00:00
[2016-09-20 21:16:46.517092] Cell (0,3)
100% [##################################################]  00:00:00
[2016-09-20 21:16:47.185353] Cell (0,2)
100% [##################################################]  00:00:00
[2016-09-20 21:16:47.879745] Cell (0,1)
100% [##################################################]  00:00:00
[2016-09-20 21:16:48.656058] Cell (0,0)
100% [##################################################]  00:00:01
[2016-09-20 21:16:49.767470] Generating rules, 7 iterations
[2016-09-20 21:16:49.767520] Iteration 1
100% [##################################################]  00:00:02
[2016-09-20 21:16:52.186444] Iteration 2
100% [##################################################]  00:00:18
[2016-09-20 21:17:10.681981] Iteration 3
100% [##################################################]  00:00:48
[2016-09-20 21:17:59.149994] Iteration 4
100% [##################################################]  00:01:29
[2016-09-20 21:19:28.182870] Iteration 5
100% [##################################################]  00:02:04
[2016-09-20 21:21:32.975915] Iteration 6
100% [##################################################]  00:01:43
[2016-09-20 21:23:16.533190] Iteration 7
100% [##################################################]  00:00:00
[2016-09-20 21:23:16.615483] Found 47710 rules, 12601 of which are valid, 3249 of which are distinct
[2016-09-20 21:23:16.615527] Death by overlap: 23032
[2016-09-20 21:23:16.615538] Death by perm prop: 12077
[2016-09-20 21:23:16.615546]
[2016-09-20 21:23:16.615750] Finding exact cover...
[2016-09-20 21:23:16.615831] Found:

Gurobi Optimizer version 6.5.0 build v6.5.0rc1 (mac64)
Copyright (c) 2015, Gurobi Optimization, Inc.

Read LP format model from file /var/folders/5c/0g9v9k4x76gcq3btks74_jpw0000gn/T/struct_tmpraAs8Y/inp.lp
Reading time = 0.02 seconds
(null): 126 rows, 3249 columns, 34198 nonzeros
Optimize a model with 126 rows, 3249 columns and 34198 nonzeros
Coefficient statistics:
  Matrix range    [1e+00, 1e+00]
  Objective range [1e+00, 1e+00]
  Bounds range    [1e+00, 1e+00]
  RHS range       [1e+00, 1e+00]
Found heuristic solution: objective 126
Presolve time: 0.05s
Presolved: 126 rows, 3249 columns, 34198 nonzeros
Variable types: 0 continuous, 3249 integer (3249 binary)

Root relaxation: objective 5.000000e+00, 78 iterations, 0.00 seconds

    Nodes    |    Current Node    |     Objective Bounds      |     Work
 Expl Unexpl |  Obj  Depth IntInf | Incumbent    BestBd   Gap | It/Node Time

*    0     0               0       5.0000000    5.00000  0.00%     -    0s

Explored 0 nodes (78 simplex iterations) in 0.07 seconds
Thread count was 8 (of 8 available processors)

Optimal solution found (tolerance 1.00e-04)
Best objective 5.000000000000e+00, best bound 5.000000000000e+00, gap 0.0%

Wrote result file '/var/folders/5c/0g9v9k4x76gcq3btks74_jpw0000gn/T/struct_tmpraAs8Y/out.sol'

[27, 1683, 2314, 2434, 2582]

[2016-09-20 21:23:16.865764] Index:
 27:
000000000000000000000000000000000000000000000000000000001010100000000000000000000000000000000101000000000000000010000000000000

+-+-+-+-+
| |o| | |
+-+-+-+-+
| | | |o|
+-+-+-+-+
| | |o| |
+-+-+-+-+
| |1| | |
+-+-+-+-+
|o| | | |
+-+-+-+-+
1: Av([[2, 1]])

+-+-+-+-+-+-+
| | |o| | | |
+-+-+-+-+-+-+
| | | | | |o|
+-+-+-+-+-+-+
| | | | |o| |
+-+-+-+-+-+-+
| | | |1| | |
+-+-+-+-+-+-+
| |o| | | | |
+-+-+-+-+-+-+
|1| | | | | |
+-+-+-+-+-+-+
1: Av([[2, 1]])

+-+-+-+-+-+-+
| | |o| | | |
+-+-+-+-+-+-+
| | | | | |o|
+-+-+-+-+-+-+
| | | | |1| |
+-+-+-+-+-+-+
| | | |o| | |
+-+-+-+-+-+-+
| |o| | | | |
+-+-+-+-+-+-+
|1| | | | | |
+-+-+-+-+-+-+
1: Av([[2, 1]])

+-+-+-+-+-+-+
| | |o| | | |
+-+-+-+-+-+-+
| | | | | |1|
+-+-+-+-+-+-+
| | | | |o| |
+-+-+-+-+-+-+
| | | |o| | |
+-+-+-+-+-+-+
| |o| | | | |
+-+-+-+-+-+-+
|1| | | | | |
+-+-+-+-+-+-+
1: Av([[2, 1]])

+-+-+-+-+-+-+
| | |o| | | |
+-+-+-+-+-+-+
| | | | | |o|
+-+-+-+-+-+-+
| | | | |o| |
+-+-+-+-+-+-+
| | | |1| | |
+-+-+-+-+-+-+
| |1| | | | |
+-+-+-+-+-+-+
|o| | | | | |
+-+-+-+-+-+-+
1: Av([[2, 1]])

+-+-+-+-+-+-+
| | |o| | | |
+-+-+-+-+-+-+
| | | | | |o|
+-+-+-+-+-+-+
| | | | |1| |
+-+-+-+-+-+-+
| | | |o| | |
+-+-+-+-+-+-+
| |1| | | | |
+-+-+-+-+-+-+
|o| | | | | |
+-+-+-+-+-+-+
1: Av([[2, 1]])

+-+-+-+-+-+-+
| | |o| | | |
+-+-+-+-+-+-+
| | | | | |1|
+-+-+-+-+-+-+
| | | | |o| |
+-+-+-+-+-+-+
| | | |o| | |
+-+-+-+-+-+-+
| |1| | | | |
+-+-+-+-+-+-+
|o| | | | | |
+-+-+-+-+-+-+
1: Av([[2, 1]])

1683:
000000000000000000000000000000000000000000000000000000000101010000000000000000000000000000000010100000000000000001000000000000

+-+-+-+-+-+
| | | |o| |
+-+-+-+-+-+
| | |o| | |
+-+-+-+-+-+
| |1| | |o|
+-+-+-+-+-+
|o| | | | |
+-+-+-+-+-+
1: Av([[2, 1]])

+-+-+-+-+-+-+
| | | | |o| |
+-+-+-+-+-+-+
| | | |o| | |
+-+-+-+-+-+-+
| | |1| | | |
+-+-+-+-+-+-+
| | | | | |o|
+-+-+-+-+-+-+
| |o| | | | |
+-+-+-+-+-+-+
|1| | | | | |
+-+-+-+-+-+-+
1: Av([[2, 1]])

+-+-+-+-+-+-+
| | | | |o| |
+-+-+-+-+-+-+
| | | |1| | |
+-+-+-+-+-+-+
| | |o| | | |
+-+-+-+-+-+-+
| | | | | |o|
+-+-+-+-+-+-+
| |o| | | | |
+-+-+-+-+-+-+
|1| | | | | |
+-+-+-+-+-+-+
1: Av([[2, 1]])

+-+-+-+-+-+-+
| | | | |1| |
+-+-+-+-+-+-+
| | | |o| | |
+-+-+-+-+-+-+
| | |o| | | |
+-+-+-+-+-+-+
| | | | | |o|
+-+-+-+-+-+-+
| |o| | | | |
+-+-+-+-+-+-+
|1| | | | | |
+-+-+-+-+-+-+
1: Av([[2, 1]])

+-+-+-+-+-+-+
| | | | |o| |
+-+-+-+-+-+-+
| | | |o| | |
+-+-+-+-+-+-+
| | |1| | | |
+-+-+-+-+-+-+
| | | | | |o|
+-+-+-+-+-+-+
| |1| | | | |
+-+-+-+-+-+-+
|o| | | | | |
+-+-+-+-+-+-+
1: Av([[2, 1]])

+-+-+-+-+-+-+
| | | | |o| |
+-+-+-+-+-+-+
| | | |1| | |
+-+-+-+-+-+-+
| | |o| | | |
+-+-+-+-+-+-+
| | | | | |o|
+-+-+-+-+-+-+
| |1| | | | |
+-+-+-+-+-+-+
|o| | | | | |
+-+-+-+-+-+-+
1: Av([[2, 1]])

+-+-+-+-+-+-+
| | | | |1| |
+-+-+-+-+-+-+
| | | |o| | |
+-+-+-+-+-+-+
| | |o| | | |
+-+-+-+-+-+-+
| | | | | |o|
+-+-+-+-+-+-+
| |1| | | | |
+-+-+-+-+-+-+
|o| | | | | |
+-+-+-+-+-+-+
1: Av([[2, 1]])

2314:
111111111111111111111111111111101110111111010111101110110000000111111111111111110111010111011000001111111110101100011111011111

+-+
|1|
+-+
1: Av([[1, 3, 2], [2, 1, 3, 4], [3, 4, 1, 2]])

2434:
000000000000000000000000000000010001000000100000000000000000000000000000000000001000100000000000000000000001000000000000000000

+-+-+-+-+-+-+
| | | | |o| |
+-+-+-+-+-+-+
|o| | | | | |
+-+-+-+-+-+-+
| |1| | | | |
+-+-+-+-+-+-+
| | | | | |o|
+-+-+-+-+-+-+
| | | |o| | |
+-+-+-+-+-+-+
| | |2| | | |
+-+-+-+-+-+-+
1: Av([[1, 2]])
2: Av([[2, 1]])

+-+-+-+-+-+-+
| | | | |o| |
+-+-+-+-+-+-+
|1| | | | | |
+-+-+-+-+-+-+
| |o| | | | |
+-+-+-+-+-+-+
| | | | | |o|
+-+-+-+-+-+-+
| | | |o| | |
+-+-+-+-+-+-+
| | |2| | | |
+-+-+-+-+-+-+
1: Av([[1, 2]])
2: Av([[2, 1]])

+-+-+-+-+-+-+
| | | | |o| |
+-+-+-+-+-+-+
|o| | | | | |
+-+-+-+-+-+-+
| |1| | | | |
+-+-+-+-+-+-+
| | | | | |o|
+-+-+-+-+-+-+
| | | |2| | |
+-+-+-+-+-+-+
| | |o| | | |
+-+-+-+-+-+-+
1: Av([[1, 2]])
2: Av([[2, 1]])

+-+-+-+-+-+-+
| | | | |o| |
+-+-+-+-+-+-+
|2| | | | | |
+-+-+-+-+-+-+
| |o| | | | |
+-+-+-+-+-+-+
| | | | | |o|
+-+-+-+-+-+-+
| | | |1| | |
+-+-+-+-+-+-+
| | |o| | | |
+-+-+-+-+-+-+
1: Av([[2, 1]])
2: Av([[1, 2]])

2582:
000000000000000000000000000000000000000000001000010001000000001000000000000000000000001000100000010000000000010000100000100000

+-+-+-+-+-+
| | |o| | |
+-+-+-+-+-+
| | | | |o|
+-+-+-+-+-+
| |o| | | |
+-+-+-+-+-+
|1| | | | |
+-+-+-+-+-+
| | | |2| |
+-+-+-+-+-+
1: Av([[2, 1]])
2: Av([[1, 2]])

+-+-+-+-+-+
| | |o| | |
+-+-+-+-+-+
| | | | |o|
+-+-+-+-+-+
| |2| | | |
+-+-+-+-+-+
|o| | | | |
+-+-+-+-+-+
| | | |1| |
+-+-+-+-+-+
1: Av([[1, 2]])
2: Av([[2, 1]])

[2016-09-20 21:23:16.869375] Verifying cover [27, 1683, 2314, 2434, 2582] up to length 10
[2016-09-20 21:23:16.869400] Multiple covers, but only using one for verification
[2016-09-20 21:23:54.832704] Cover verified up to length 10
