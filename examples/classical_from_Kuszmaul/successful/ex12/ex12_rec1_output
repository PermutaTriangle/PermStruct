Hennings-MacBook-Pro:classical_from_Kuszmaul ulfarsson$ python ex12/ex12_rec1.py
[2016-09-20 21:28:21.162576] Generating permutations from input
[2016-09-20 21:28:21.405696] Finished in 0.243s
[2016-09-20 21:28:21.405742] Enumeration is [1, 1, 2, 5, 12, 26, 51]
[2016-09-20 21:28:21.405767] Tayloring DAG
[2016-09-20 21:28:22.103139] Finished in 0.697s
[2016-09-20 21:28:22.103371] (0, 'Av([[1, 2, 3], [1, 3, 2], [2, 1, 3], [2, 3, 1], [3, 1, 2]])')
[2016-09-20 21:28:22.103391] (1, 'Av([[1, 2, 3], [1, 3, 2], [2, 1, 3], [2, 3, 1]])')
[2016-09-20 21:28:22.103403] (2, 'Av([[1, 2, 3], [1, 3, 2], [2, 1, 3], [3, 1, 2]])')
[2016-09-20 21:28:22.103414] (3, 'Av([[1, 2, 3], [1, 3, 2], [2, 1, 3], [3, 4, 1, 2]])')
[2016-09-20 21:28:22.103424] (4, 'Av([[1, 2, 3], [1, 3, 2], [2, 3, 1], [3, 1, 2]])')
[2016-09-20 21:28:22.103435] (5, 'Av([[1, 2, 3], [1, 3, 2], [2, 3, 1]])')
[2016-09-20 21:28:22.103445] (6, 'Av([[1, 2, 3], [1, 3, 2], [3, 1, 2]])')
[2016-09-20 21:28:22.103455] (7, 'Av([[1, 2, 3], [1, 3, 2], [3, 4, 1, 2]])')
[2016-09-20 21:28:22.103466] (8, 'Av([[1, 2]])')
[2016-09-20 21:28:22.103476] (9, 'Av([[1, 3, 2], [2, 1, 3, 4], [2, 3, 1], [3, 1, 2]])')
[2016-09-20 21:28:22.103487] (10, 'Av([[1, 3, 2], [2, 1, 3, 4], [2, 3, 1]])')
[2016-09-20 21:28:22.103497] (11, 'Av([[1, 3, 2], [2, 1, 3, 4], [3, 1, 2]])')
[2016-09-20 21:28:22.103517] (12, 'Av([[1, 3, 2], [2, 1, 3], [2, 3, 1], [3, 1, 2]])')
[2016-09-20 21:28:22.103537] (13, 'Av([[1, 3, 2], [2, 1, 3], [2, 3, 1]])')
[2016-09-20 21:28:22.103552] (14, 'Av([[1, 3, 2], [2, 1, 3], [3, 1, 2]])')
[2016-09-20 21:28:22.103570] (15, 'Av([[1, 3, 2], [2, 1, 3], [3, 4, 1, 2]])')
[2016-09-20 21:28:22.103590] (16, 'Av([[2, 1]])')
[2016-09-20 21:28:22.103607] (17, 'input permutation set')
[2016-09-20 21:28:22.103622] (18, 'point permutation set')
[2016-09-20 21:28:22.103640] (19, 'None')
[2016-09-20 21:28:22.104108] Generating rules
[2016-09-20 21:28:22.104124] Generate allowed neighbors, overlap
[2016-09-20 21:28:23.445948] Generate allowed neighbors, perm prop
[2016-09-20 21:28:26.332296] Generating point rules
[2016-09-20 21:28:26.332363] Cell (4,4)
100% [##################################################]  00:00:00
[2016-09-20 21:28:26.332894] Cell (4,3)
100% [##################################################]  00:00:00
[2016-09-20 21:28:26.333931] Cell (4,2)
100% [##################################################]  00:00:00
[2016-09-20 21:28:26.336029] Cell (4,1)
100% [##################################################]  00:00:00
[2016-09-20 21:28:26.339770] Cell (4,0)
100% [##################################################]  00:00:00
[2016-09-20 21:28:26.345627] Cell (3,4)
100% [##################################################]  00:00:00
[2016-09-20 21:28:26.355187] Cell (3,3)
100% [##################################################]  00:00:00
[2016-09-20 21:28:26.371295] Cell (3,2)
100% [##################################################]  00:00:00
[2016-09-20 21:28:26.392834] Cell (3,1)
100% [##################################################]  00:00:00
[2016-09-20 21:28:26.421993] Cell (3,0)
100% [##################################################]  00:00:00
[2016-09-20 21:28:26.468353] Cell (2,4)
100% [##################################################]  00:00:00
[2016-09-20 21:28:26.521080] Cell (2,3)
100% [##################################################]  00:00:00
[2016-09-20 21:28:26.591395] Cell (2,2)
100% [##################################################]  00:00:00
[2016-09-20 21:28:26.678714] Cell (2,1)
100% [##################################################]  00:00:00
[2016-09-20 21:28:26.792701] Cell (2,0)
100% [##################################################]  00:00:00
[2016-09-20 21:28:26.968487] Cell (1,4)
100% [##################################################]  00:00:00
[2016-09-20 21:28:27.122576] Cell (1,3)
100% [##################################################]  00:00:00
[2016-09-20 21:28:27.273187] Cell (1,2)
100% [##################################################]  00:00:00
[2016-09-20 21:28:27.456236] Cell (1,1)
100% [##################################################]  00:00:00
[2016-09-20 21:28:27.682690] Cell (1,0)
100% [##################################################]  00:00:00
[2016-09-20 21:28:28.000107] Cell (0,4)
100% [##################################################]  00:00:00
[2016-09-20 21:28:28.132232] Cell (0,3)
100% [##################################################]  00:00:00
[2016-09-20 21:28:28.260152] Cell (0,2)
100% [##################################################]  00:00:00
[2016-09-20 21:28:28.388423] Cell (0,1)
100% [##################################################]  00:00:00
[2016-09-20 21:28:28.533694] Cell (0,0)
100% [##################################################]  00:00:00
[2016-09-20 21:28:28.708263] Generating rules, 6 iterations
[2016-09-20 21:28:28.708305] Iteration 1
100% [##################################################]  00:00:00
[2016-09-20 21:28:29.242547] Iteration 2
100% [##################################################]  00:00:06
[2016-09-20 21:28:35.393249] Iteration 3
100% [##################################################]  00:00:14
[2016-09-20 21:28:50.130506] Iteration 4
100% [##################################################]  00:00:21
[2016-09-20 21:29:11.487089] Iteration 5
100% [##################################################]  00:00:15
[2016-09-20 21:29:26.796610] Iteration 6
100% [##################################################]  00:00:00
[2016-09-20 21:29:26.806270] Found 8038 rules, 2280 of which are valid, 1365 of which are distinct
[2016-09-20 21:29:26.806296] Death by overlap: 2873
[2016-09-20 21:29:26.806305] Death by perm prop: 2885
[2016-09-20 21:29:26.806313]
[2016-09-20 21:29:26.806384] Finding exact cover...
[2016-09-20 21:29:26.806413] Found:

Gurobi Optimizer version 6.5.0 build v6.5.0rc1 (mac64)
Copyright (c) 2015, Gurobi Optimization, Inc.

Read LP format model from file /var/folders/5c/0g9v9k4x76gcq3btks74_jpw0000gn/T/struct_tmpyLeQBs/inp.lp
Reading time = 0.01 seconds
(null): 98 rows, 1365 columns, 17031 nonzeros
Optimize a model with 98 rows, 1365 columns and 17031 nonzeros
Coefficient statistics:
  Matrix range    [1e+00, 1e+00]
  Objective range [1e+00, 1e+00]
  Bounds range    [1e+00, 1e+00]
  RHS range       [1e+00, 1e+00]
Presolve removed 98 rows and 1365 columns
Presolve time: 0.02s
Presolve: All rows and columns removed

Explored 0 nodes (0 simplex iterations) in 0.03 seconds
Thread count was 1 (of 8 available processors)

Optimal solution found (tolerance 1.00e-04)
Best objective 4.000000000000e+00, best bound 4.000000000000e+00, gap 0.0%

Wrote result file '/var/folders/5c/0g9v9k4x76gcq3btks74_jpw0000gn/T/struct_tmpyLeQBs/out.sol'

[1, 65, 108, 1058]

[2016-09-20 21:29:26.910037] Index:
  1:
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001

+-+
| |
+-+

 65:
00000000000000000000000000111111111111111000000000000000000000011111111000000000001111000001100100

+-+-+-+-+
| | |o| |
+-+-+-+-+
|o| | | |
+-+-+-+-+
| |2| | |
+-+-+-+-+
| | | |1|
+-+-+-+-+
1: Av([[1, 2]])
2: Av([[1, 3, 2], [2, 1, 3], [3, 4, 1, 2]])

108:
11111111111111111111111111000000000000000000000000011111111111100000000000000111110000000110001010

+-+-+
|o| |
+-+-+
| |X|
+-+-+

1058:
00000000000000000000000000000000000000000111111111100000000000000000000111111000000000111000010000

+-+-+-+-+
| | | |o|
+-+-+-+-+
| | |o| |
+-+-+-+-+
| |o| | |
+-+-+-+-+
|1| | | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
1: Av([[2, 1]])
2: Av([[1, 2]])

+-+-+-+-+
| | | |o|
+-+-+-+-+
| | |o| |
+-+-+-+-+
| |2| | |
+-+-+-+-+
|o| | | |
+-+-+-+-+
| | | |1|
+-+-+-+-+
1: Av([[1, 2]])
2: Av([[2, 1]])

+-+-+-+-+
| | | |o|
+-+-+-+-+
| | |1| |
+-+-+-+-+
| |o| | |
+-+-+-+-+
|o| | | |
+-+-+-+-+
| | | |2|
+-+-+-+-+
1: Av([[2, 1]])
2: Av([[1, 2]])

[2016-09-20 21:29:26.911424] Verifying cover [1, 65, 108, 1058] up to length 10
[2016-09-20 21:29:26.911476] Multiple covers, but only using one for verification
[2016-09-20 21:29:43.295566] Cover verified up to length 10
