Hennings-MacBook-Pro:classical_from_Kuszmaul ulfarsson$ python ex6/ex6_rec1.py
[2016-09-20 14:00:40.016454] Generating permutations from input
[2016-09-20 14:00:40.220953] Finished in 0.204s
[2016-09-20 14:00:40.221002] Enumeration is [1, 1, 2, 5, 9, 14, 25]
[2016-09-20 14:00:40.221029] Tayloring DAG
[2016-09-20 14:00:41.166090] Finished in 0.945s
[2016-09-20 14:00:41.166381] (0, 'Av([[1, 2, 3], [1, 3, 2], [2, 1, 3], [2, 3, 1], [3, 1, 2]])')
[2016-09-20 14:00:41.166412] (1, 'Av([[1, 2, 3], [1, 3, 2], [2, 1, 3], [2, 3, 1]])')
[2016-09-20 14:00:41.166425] (2, 'Av([[1, 2, 3], [1, 3, 2], [2, 1, 3], [3, 1, 2]])')
[2016-09-20 14:00:41.166436] (3, 'Av([[1, 2, 3], [1, 3, 2], [2, 1, 3]])')
[2016-09-20 14:00:41.166448] (4, 'Av([[1, 2, 3], [1, 3, 2], [2, 3, 1], [3, 1, 2], [3, 2, 1, 4]])')
[2016-09-20 14:00:41.166458] (5, 'Av([[1, 2, 3], [1, 3, 2], [2, 3, 1], [3, 2, 1, 4]])')
[2016-09-20 14:00:41.166468] (6, 'Av([[1, 2, 3], [1, 3, 2], [3, 1, 2], [3, 2, 1, 4]])')
[2016-09-20 14:00:41.166479] (7, 'Av([[1, 2, 3], [1, 3, 2], [3, 2, 1, 4]])')
[2016-09-20 14:00:41.166489] (8, 'Av([[1, 2]])')
[2016-09-20 14:00:41.166500] (9, 'Av([[1, 3, 2], [2, 1, 3, 4], [2, 3, 1], [3, 1, 2, 4], [3, 2, 1, 4], [4, 1, 2, 3]])')
[2016-09-20 14:00:41.166511] (10, 'Av([[1, 3, 2], [2, 1, 3, 4], [2, 3, 1], [3, 1, 2, 4], [3, 2, 1], [4, 1, 2, 3]])')
[2016-09-20 14:00:41.166523] (11, 'Av([[1, 3, 2], [2, 1, 3, 4], [2, 3, 1], [3, 1, 2], [3, 2, 1, 4]])')
[2016-09-20 14:00:41.166533] (12, 'Av([[1, 3, 2], [2, 1, 3, 4], [2, 3, 1], [3, 1, 2], [3, 2, 1]])')
[2016-09-20 14:00:41.166544] (13, 'Av([[1, 3, 2], [2, 1, 3, 4], [2, 3, 4, 1], [3, 1, 2, 4], [3, 2, 1], [4, 1, 2, 3]])')
[2016-09-20 14:00:41.166554] (14, 'Av([[1, 3, 2], [2, 1, 3, 4], [2, 3, 4, 1], [3, 1, 2], [3, 2, 1, 4]])')
[2016-09-20 14:00:41.166565] (15, 'Av([[1, 3, 2], [2, 1, 3, 4], [2, 3, 4, 1], [3, 1, 2], [3, 2, 1]])')
[2016-09-20 14:00:41.166575] (16, 'Av([[1, 3, 2], [2, 1, 3], [2, 3, 1], [3, 1, 2], [3, 2, 1]])')
[2016-09-20 14:00:41.166586] (17, 'Av([[1, 3, 2], [2, 1, 3], [2, 3, 1], [3, 1, 2]])')
[2016-09-20 14:00:41.166596] (18, 'Av([[1, 3, 2], [2, 1, 3], [2, 3, 1], [3, 2, 1], [4, 1, 2, 3]])')
[2016-09-20 14:00:41.166606] (19, 'Av([[1, 3, 2], [2, 1, 3], [2, 3, 1], [4, 1, 2, 3]])')
[2016-09-20 14:00:41.166617] (20, 'Av([[1, 3, 2], [2, 1, 3], [2, 3, 4, 1], [3, 1, 2], [3, 2, 1]])')
[2016-09-20 14:00:41.166627] (21, 'Av([[1, 3, 2], [2, 1, 3], [2, 3, 4, 1], [3, 1, 2]])')
[2016-09-20 14:00:41.166637] (22, 'Av([[1, 3, 2], [2, 1, 3], [2, 3, 4, 1], [3, 2, 1], [4, 1, 2, 3]])')
[2016-09-20 14:00:41.166649] (23, 'Av([[1, 3, 2], [2, 1, 3], [2, 3, 4, 1], [4, 1, 2, 3]])')
[2016-09-20 14:00:41.166659] (24, 'Av([[2, 1]])')
[2016-09-20 14:00:41.166669] (25, 'input permutation set')
[2016-09-20 14:00:41.166680] (26, 'point permutation set')
[2016-09-20 14:00:41.166690] (27, 'None')
[2016-09-20 14:00:41.166905] Generating rules
[2016-09-20 14:00:41.166920] Generate allowed neighbors, overlap
[2016-09-20 14:00:42.759081] Generate allowed neighbors, perm prop
[2016-09-20 14:00:48.192358] Generating point rules
[2016-09-20 14:00:48.192416] Cell (3,3)
100% [##################################################]  00:00:00
[2016-09-20 14:00:48.192904] Cell (3,2)
100% [##################################################]  00:00:00
[2016-09-20 14:00:48.193644] Cell (3,1)
100% [##################################################]  00:00:00
[2016-09-20 14:00:48.195203] Cell (3,0)
100% [##################################################]  00:00:00
[2016-09-20 14:00:48.197982] Cell (2,3)
100% [##################################################]  00:00:00
[2016-09-20 14:00:48.202131] Cell (2,2)
100% [##################################################]  00:00:00
[2016-09-20 14:00:48.209739] Cell (2,1)
100% [##################################################]  00:00:00
[2016-09-20 14:00:48.221076] Cell (2,0)
100% [##################################################]  00:00:00
[2016-09-20 14:00:48.237634] Cell (1,3)
100% [##################################################]  00:00:00
[2016-09-20 14:00:48.256355] Cell (1,2)
100% [##################################################]  00:00:00
[2016-09-20 14:00:48.281219] Cell (1,1)
100% [##################################################]  00:00:00
[2016-09-20 14:00:48.310851] Cell (1,0)
100% [##################################################]  00:00:00
[2016-09-20 14:00:48.349706] Cell (0,3)
100% [##################################################]  00:00:00
[2016-09-20 14:00:48.372957] Cell (0,2)
100% [##################################################]  00:00:00
[2016-09-20 14:00:48.395128] Cell (0,1)
100% [##################################################]  00:00:00
[2016-09-20 14:00:48.419900] Cell (0,0)
100% [##################################################]  00:00:00
[2016-09-20 14:00:48.448068] Generating rules, 5 iterations
[2016-09-20 14:00:48.448093] Iteration 1
100% [##################################################]  00:00:00
[2016-09-20 14:00:48.758450] Iteration 2
100% [##################################################]  00:00:04
[2016-09-20 14:00:53.020274] Iteration 3
100% [##################################################]  00:00:05
[2016-09-20 14:00:58.924467] Iteration 4
100% [##################################################]  00:00:01
[2016-09-20 14:01:00.420445] Iteration 5
100% [##################################################]  00:00:00
[2016-09-20 14:01:00.422303] Found 1031 rules, 471 of which are valid, 369 of which are distinct
[2016-09-20 14:01:00.422326] Death by overlap: 554
[2016-09-20 14:01:00.422336] Death by perm prop: 6
[2016-09-20 14:01:00.422344]
[2016-09-20 14:01:00.422499] Finding exact cover...
[2016-09-20 14:01:00.422527] Found:

Gurobi Optimizer version 6.5.0 build v6.5.0rc1 (mac64)
Copyright (c) 2015, Gurobi Optimization, Inc.

Read LP format model from file /var/folders/5c/0g9v9k4x76gcq3btks74_jpw0000gn/T/struct_tmpgLMtb2/inp.lp
Reading time = 0.00 seconds
(null): 57 rows, 369 columns, 3964 nonzeros
Optimize a model with 57 rows, 369 columns and 3964 nonzeros
Coefficient statistics:
  Matrix range    [1e+00, 1e+00]
  Objective range [1e+00, 1e+00]
  Bounds range    [1e+00, 1e+00]
  RHS range       [1e+00, 1e+00]
Found heuristic solution: objective 6
Presolve removed 57 rows and 369 columns
Presolve time: 0.00s
Presolve: All rows and columns removed

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 1 (of 8 available processors)

Optimal solution found (tolerance 1.00e-04)
Best objective 3.000000000000e+00, best bound 3.000000000000e+00, gap 0.0%

Wrote result file '/var/folders/5c/0g9v9k4x76gcq3btks74_jpw0000gn/T/struct_tmpgLMtb2/out.sol'

[114, 122, 215]

[2016-09-20 14:01:00.447887] Index:
114:
111111111111111111111111011111111111110111111100111101111

+-+
|1|
+-+
1: Av([[1, 2, 3], [1, 3, 2], [3, 2, 1, 4]])

122:
000000000000000000000000100000000000001000000001000010000

+-+-+-+-+
| | | |o|
+-+-+-+-+
| | |o| |
+-+-+-+-+
| |o| | |
+-+-+-+-+
|1| | | |
+-+-+-+-+
1: Av([[2, 1]])

+-+-+-+-+
| | | |o|
+-+-+-+-+
| | |o| |
+-+-+-+-+
| |1| | |
+-+-+-+-+
|o| | | |
+-+-+-+-+
1: Av([[2, 1]])

+-+-+-+-+
| | | |o|
+-+-+-+-+
| | |1| |
+-+-+-+-+
| |o| | |
+-+-+-+-+
|o| | | |
+-+-+-+-+
1: Av([[2, 1]])

+-+-+-+-+
| | | |1|
+-+-+-+-+
| | |o| |
+-+-+-+-+
| |o| | |
+-+-+-+-+
|o| | | |
+-+-+-+-+
1: Av([[2, 1]])

215:
000000000000000000000000000000000000000000000010000000000

+-+-+-+-+
| | | |o|
+-+-+-+-+
| |o| | |
+-+-+-+-+
|o| | | |
+-+-+-+-+
| | |o| |
+-+-+-+-+

[2016-09-20 14:01:00.448604] Verifying cover [114, 122, 215] up to length 10
[2016-09-20 14:01:00.448627] Multiple covers, but only using one for verification
[2016-09-20 14:01:16.398164] Cover verified up to length 10
