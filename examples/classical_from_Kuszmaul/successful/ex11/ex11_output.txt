Hennings-MacBook-Pro:classical_from_Kuszmaul ulfarsson$ python ex11.py
[2016-09-20 14:43:37.201762] Generating permutations from input
[2016-09-20 14:43:38.650381] Finished in 1.449s
[2016-09-20 14:43:38.650429] Enumeration is [1, 1, 2, 6, 14, 22, 32, 48]
[2016-09-20 14:43:38.650465] Tayloring DAG
[2016-09-20 14:43:46.086062] Finished in 7.436s
[2016-09-20 14:43:46.086787] (0, 'Av([[1, 2, 3], [1, 3, 2], [2, 1, 3], [2, 3, 1], [3, 1, 2]])')
[2016-09-20 14:43:46.086809] (1, 'Av([[1, 2, 3], [1, 3, 2], [2, 1, 3], [2, 3, 1]])')
[2016-09-20 14:43:46.086831] (2, 'Av([[1, 2, 3], [1, 3, 2], [2, 1, 3], [3, 1, 2]])')
[2016-09-20 14:43:46.086842] (3, 'Av([[1, 2, 3], [1, 3, 2], [2, 1, 3]])')
[2016-09-20 14:43:46.086853] (4, 'Av([[1, 2, 3], [1, 3, 2], [2, 3, 1], [3, 1, 2]])')
[2016-09-20 14:43:46.086863] (5, 'Av([[1, 2, 3], [1, 3, 2], [2, 3, 1], [4, 2, 1, 3]])')
[2016-09-20 14:43:46.086873] (6, 'Av([[1, 2, 3], [1, 3, 2], [3, 1, 2]])')
[2016-09-20 14:43:46.086884] (7, 'Av([[1, 2, 3], [1, 3, 2], [4, 2, 1, 3]])')
[2016-09-20 14:43:46.086894] (8, 'Av([[1, 2, 3], [1, 4, 3, 2], [2, 1, 3], [2, 3, 1], [3, 1, 2]])')
[2016-09-20 14:43:46.086914] (9, 'Av([[1, 2, 3], [1, 4, 3, 2], [2, 1, 3], [2, 3, 1]])')
[2016-09-20 14:43:46.086924] (10, 'Av([[1, 2, 3], [1, 4, 3, 2], [2, 1, 3], [2, 4, 3, 1], [3, 1, 2]])')
[2016-09-20 14:43:46.086935] (11, 'Av([[1, 2, 3], [1, 4, 3, 2], [2, 1, 3], [2, 4, 3, 1]])')
[2016-09-20 14:43:46.086945] (12, 'Av([[1, 2, 3], [1, 4, 3, 2], [2, 1, 4, 3], [2, 3, 1], [3, 1, 2]])')
[2016-09-20 14:43:46.086956] (13, 'Av([[1, 2, 3], [1, 4, 3, 2], [2, 1, 4, 3], [2, 3, 1], [4, 2, 1, 3]])')
[2016-09-20 14:43:46.086967] (14, 'Av([[1, 2, 3], [1, 4, 3, 2], [2, 1, 4, 3], [2, 4, 1, 3], [2, 4, 3, 1], [4, 2, 1, 3]])')
[2016-09-20 14:43:46.086977] (15, 'Av([[1, 2, 3], [1, 4, 3, 2], [2, 1, 4, 3], [2, 4, 3, 1], [3, 1, 2]])')
[2016-09-20 14:43:46.086987] (16, 'Av([[1, 2]])')
[2016-09-20 14:43:46.086998] (17, 'Av([[1, 3, 2], [2, 1, 3, 4], [2, 3, 1, 4], [2, 3, 4, 1], [3, 1, 2, 4], [3, 2, 1], [4, 1, 2, 3]])')
[2016-09-20 14:43:46.087008] (18, 'Av([[1, 3, 2], [2, 1, 3, 4], [2, 3, 1, 4], [2, 3, 4, 1], [3, 1, 2, 4], [4, 1, 2, 3], [4, 2, 1, 3]])')
[2016-09-20 14:43:46.087020] (19, 'Av([[1, 3, 2], [2, 1, 3, 4], [2, 3, 1, 4], [2, 3, 4, 1], [3, 1, 2], [3, 2, 1]])')
[2016-09-20 14:43:46.087030] (20, 'Av([[1, 3, 2], [2, 1, 3, 4], [2, 3, 1, 4], [2, 3, 4, 1], [3, 1, 2]])')
[2016-09-20 14:43:46.087040] (21, 'Av([[1, 3, 2], [2, 1, 3, 4], [2, 3, 1], [3, 1, 2, 4], [3, 2, 1], [4, 1, 2, 3]])')
[2016-09-20 14:43:46.087052] (22, 'Av([[1, 3, 2], [2, 1, 3, 4], [2, 3, 1], [3, 1, 2, 4], [4, 1, 2, 3], [4, 2, 1, 3]])')
[2016-09-20 14:43:46.087062] (23, 'Av([[1, 3, 2], [2, 1, 3, 4], [2, 3, 1], [3, 1, 2], [3, 2, 1]])')
[2016-09-20 14:43:46.087072] (24, 'Av([[1, 3, 2], [2, 1, 3, 4], [2, 3, 1], [3, 1, 2]])')
[2016-09-20 14:43:46.087082] (25, 'Av([[1, 3, 2], [2, 1, 3], [2, 3, 1], [3, 1, 2], [3, 2, 1]])')
[2016-09-20 14:43:46.087092] (26, 'Av([[1, 3, 2], [2, 1, 3], [2, 3, 1], [3, 1, 2]])')
[2016-09-20 14:43:46.087102] (27, 'Av([[1, 3, 2], [2, 1, 3], [2, 3, 1], [3, 2, 1], [4, 1, 2, 3]])')
[2016-09-20 14:43:46.087112] (28, 'Av([[1, 3, 2], [2, 1, 3], [2, 3, 1], [4, 1, 2, 3]])')
[2016-09-20 14:43:46.087122] (29, 'Av([[1, 3, 2], [2, 1, 3], [2, 3, 4, 1], [3, 1, 2], [3, 2, 1]])')
[2016-09-20 14:43:46.087132] (30, 'Av([[1, 3, 2], [2, 1, 3], [2, 3, 4, 1], [3, 1, 2]])')
[2016-09-20 14:43:46.087142] (31, 'Av([[1, 3, 2], [2, 1, 3], [2, 3, 4, 1], [3, 2, 1], [4, 1, 2, 3]])')
[2016-09-20 14:43:46.087152] (32, 'Av([[1, 3, 2], [2, 1, 3], [2, 3, 4, 1], [4, 1, 2, 3]])')
[2016-09-20 14:43:46.087163] (33, 'Av([[1, 4, 3, 2], [2, 1, 3, 4], [2, 1, 4, 3], [2, 3, 1, 4], [2, 3, 4, 1], [2, 4, 3, 1], [3, 1, 2]])')
[2016-09-20 14:43:46.087173] (34, 'Av([[1, 4, 3, 2], [2, 1, 3, 4], [2, 1, 4, 3], [2, 3, 1], [3, 1, 2, 4], [4, 1, 2, 3], [4, 2, 1, 3]])')
[2016-09-20 14:43:46.087184] (35, 'Av([[1, 4, 3, 2], [2, 1, 3, 4], [2, 1, 4, 3], [2, 3, 1], [3, 1, 2]])')
[2016-09-20 14:43:46.087194] (36, 'Av([[1, 4, 3, 2], [2, 1, 3], [2, 3, 1], [3, 1, 2]])')
[2016-09-20 14:43:46.087203] (37, 'Av([[1, 4, 3, 2], [2, 1, 3], [2, 3, 1], [4, 1, 2, 3]])')
[2016-09-20 14:43:46.087213] (38, 'Av([[1, 4, 3, 2], [2, 1, 3], [2, 3, 4, 1], [2, 4, 3, 1], [3, 1, 2]])')
[2016-09-20 14:43:46.087224] (39, 'Av([[1, 4, 3, 2], [2, 1, 3], [2, 3, 4, 1], [2, 4, 3, 1], [4, 1, 2, 3]])')
[2016-09-20 14:43:46.087235] (40, 'Av([[2, 1, 3, 4], [2, 1, 4, 3], [2, 3, 1, 4], [2, 3, 4, 1], [2, 4, 1, 3], [3, 1, 2, 4], [3, 2, 1], [4, 1, 2, 3]])')
[2016-09-20 14:43:46.087245] (41, 'Av([[2, 1, 3, 4], [2, 1, 4, 3], [2, 3, 1, 4], [2, 3, 4, 1], [3, 1, 2], [3, 2, 1]])')
[2016-09-20 14:43:46.087255] (42, 'Av([[2, 1, 3, 4], [2, 1, 4, 3], [2, 3, 1], [3, 1, 2, 4], [3, 2, 1], [4, 1, 2, 3]])')
[2016-09-20 14:43:46.087265] (43, 'Av([[2, 1, 3, 4], [2, 1, 4, 3], [2, 3, 1], [3, 1, 2], [3, 2, 1]])')
[2016-09-20 14:43:46.087276] (44, 'Av([[2, 1, 3], [2, 3, 1], [3, 1, 2], [3, 2, 1]])')
[2016-09-20 14:43:46.087286] (45, 'Av([[2, 1, 3], [2, 3, 1], [3, 2, 1], [4, 1, 2, 3]])')
[2016-09-20 14:43:46.087296] (46, 'Av([[2, 1, 3], [2, 3, 4, 1], [3, 1, 2], [3, 2, 1]])')
[2016-09-20 14:43:46.087306] (47, 'Av([[2, 1, 3], [2, 3, 4, 1], [3, 2, 1], [4, 1, 2, 3]])')
[2016-09-20 14:43:46.087316] (48, 'Av([[2, 1]])')
[2016-09-20 14:43:46.087326] (49, 'input permutation set')
[2016-09-20 14:43:46.087337] (50, 'point permutation set')
[2016-09-20 14:43:46.087347] (51, 'None')
[2016-09-20 14:43:46.088003] Generating rules
[2016-09-20 14:43:46.088020] Generate allowed neighbors, overlap
[2016-09-20 14:43:52.237568] Generate allowed neighbors, perm prop
[2016-09-20 14:44:14.336598] Generating point rules
[2016-09-20 14:44:14.336661] Cell (4,4)
100% [##################################################]  00:00:00
[2016-09-20 14:44:14.337183] Cell (4,3)
100% [##################################################]  00:00:00
[2016-09-20 14:44:14.338203] Cell (4,2)
100% [##################################################]  00:00:00
[2016-09-20 14:44:14.340741] Cell (4,1)
100% [##################################################]  00:00:00
[2016-09-20 14:44:14.348662] Cell (4,0)
100% [##################################################]  00:00:00
[2016-09-20 14:44:14.363269] Cell (3,4)
100% [##################################################]  00:00:00
[2016-09-20 14:44:14.381074] Cell (3,3)
100% [##################################################]  00:00:00
[2016-09-20 14:44:14.408807] Cell (3,2)
100% [##################################################]  00:00:00
[2016-09-20 14:44:14.452874] Cell (3,1)
100% [##################################################]  00:00:00
[2016-09-20 14:44:14.519437] Cell (3,0)
100% [##################################################]  00:00:00
[2016-09-20 14:44:14.604779] Cell (2,4)
100% [##################################################]  00:00:00
[2016-09-20 14:44:14.701392] Cell (2,3)
100% [##################################################]  00:00:00
[2016-09-20 14:44:14.821837] Cell (2,2)
100% [##################################################]  00:00:00
[2016-09-20 14:44:14.975838] Cell (2,1)
100% [##################################################]  00:00:00
[2016-09-20 14:44:15.169950] Cell (2,0)
100% [##################################################]  00:00:00
[2016-09-20 14:44:15.429848] Cell (1,4)
100% [##################################################]  00:00:00
[2016-09-20 14:44:15.615939] Cell (1,3)
100% [##################################################]  00:00:00
[2016-09-20 14:44:15.832409] Cell (1,2)
100% [##################################################]  00:00:00
[2016-09-20 14:44:16.068709] Cell (1,1)
100% [##################################################]  00:00:00
[2016-09-20 14:44:16.356586] Cell (1,0)
100% [##################################################]  00:00:00
[2016-09-20 14:44:16.702944] Cell (0,4)
100% [##################################################]  00:00:00
[2016-09-20 14:44:16.883099] Cell (0,3)
100% [##################################################]  00:00:00
[2016-09-20 14:44:17.048636] Cell (0,2)
100% [##################################################]  00:00:00
[2016-09-20 14:44:17.213680] Cell (0,1)
100% [##################################################]  00:00:00
[2016-09-20 14:44:17.387387] Cell (0,0)
100% [##################################################]  00:00:00
[2016-09-20 14:44:17.571059] Generating rules, 6 iterations
[2016-09-20 14:44:17.571090] Iteration 1
100% [##################################################]  00:00:01
[2016-09-20 14:44:19.394613] Iteration 2
100% [##################################################]  00:00:08
[2016-09-20 14:44:27.495630] Iteration 3
100% [##################################################]  00:00:20
[2016-09-20 14:44:47.748040] Iteration 4
100% [##################################################]  00:02:07
[2016-09-20 14:46:55.474994] Iteration 5
100% [##################################################]  00:00:12
[2016-09-20 14:47:07.863579] Iteration 6
100% [##################################################]  00:00:00
[2016-09-20 14:47:07.872682] Found 5811 rules, 1761 of which are valid, 1263 of which are distinct
[2016-09-20 14:47:07.872705] Death by overlap: 3355
[2016-09-20 14:47:07.872715] Death by perm prop: 695
[2016-09-20 14:47:07.872722]
[2016-09-20 14:47:07.872918] Finding exact cover...
[2016-09-20 14:47:07.872959] Found:

Gurobi Optimizer version 6.5.0 build v6.5.0rc1 (mac64)
Copyright (c) 2015, Gurobi Optimization, Inc.

Read LP format model from file /var/folders/5c/0g9v9k4x76gcq3btks74_jpw0000gn/T/struct_tmpFq8pMI/inp.lp
Reading time = 0.01 seconds
(null): 126 rows, 1263 columns, 19554 nonzeros
Optimize a model with 126 rows, 1263 columns and 19554 nonzeros
Coefficient statistics:
  Matrix range    [1e+00, 1e+00]
  Objective range [1e+00, 1e+00]
  Bounds range    [1e+00, 1e+00]
  RHS range       [1e+00, 1e+00]
Presolve removed 64 rows and 1055 columns
Presolve time: 0.06s
Presolved: 62 rows, 208 columns, 1844 nonzeros
Variable types: 0 continuous, 208 integer (208 binary)
Found heuristic solution: objective 15.0000000
Found heuristic solution: objective 10.0000000

Root relaxation: objective 7.000000e+00, 26 iterations, 0.00 seconds

    Nodes    |    Current Node    |     Objective Bounds      |     Work
 Expl Unexpl |  Obj  Depth IntInf | Incumbent    BestBd   Gap | It/Node Time

*    0     0               0       7.0000000    7.00000  0.00%     -    0s

Explored 0 nodes (26 simplex iterations) in 0.07 seconds
Thread count was 8 (of 8 available processors)

Optimal solution found (tolerance 1.00e-04)
Best objective 7.000000000000e+00, best bound 7.000000000000e+00, gap 0.0%

Wrote result file '/var/folders/5c/0g9v9k4x76gcq3btks74_jpw0000gn/T/struct_tmpFq8pMI/out.sol'

[1, 38, 244, 349, 905, 964, 1254]

[2016-09-20 14:47:08.035573] Index:
  1:
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001

+-+
| |
+-+

 38:
000000000000000000000000000000000000000001111111000000000000000000000000011111110000000000000001111111000000000111110000110110

+-+-+
| |1|
+-+-+
|o| |
+-+-+
1: Av([[2, 1, 3, 4], [2, 1, 4, 3], [2, 3, 1, 4], [2, 3, 4, 1], [2, 4, 1, 3], [3, 1, 2, 4], [3, 2, 1], [4, 1, 2, 3]])

244:
111111111100000011111100001111001100101000000000111111000011110011001010000000001111001100101000000000110010100000001010001000

+-+-+-+-+
| |o| | |
+-+-+-+-+
|1| | | |
+-+-+-+-+
| | |o| |
+-+-+-+-+
| | | |2|
+-+-+-+-+
1: Av([[1, 2]])
2: Av([[1, 2, 3], [1, 4, 3, 2], [2, 1, 3], [2, 4, 3, 1]])

349:
000000000011111100000011110000110010010000000000000000111100001100100100000000000000110010010000000000001001000000000100000000

+-+-+-+-+-+
| |o| | | |
+-+-+-+-+-+
|2| | | | |
+-+-+-+-+-+
| | | |o| |
+-+-+-+-+-+
| | |o| | |
+-+-+-+-+-+
| | | | |1|
+-+-+-+-+-+
1: Av([[1, 2, 3], [1, 4, 3, 2], [2, 1, 3], [2, 4, 3, 1]])
2: Av([[1, 2]])

905:
000000000000000000000000000000000000000010000000000000000000000000000000100000000000000000000010000000000000001000000000000000

+-+-+-+-+-+
| | | |o| |
+-+-+-+-+-+
|o| | | | |
+-+-+-+-+-+
| |1| | | |
+-+-+-+-+-+
| | | | |o|
+-+-+-+-+-+
| | |o| | |
+-+-+-+-+-+
1: Av([[1, 2]])

+-+-+-+-+-+
| | | |o| |
+-+-+-+-+-+
|1| | | | |
+-+-+-+-+-+
| |o| | | |
+-+-+-+-+-+
| | | | |o|
+-+-+-+-+-+
| | |o| | |
+-+-+-+-+-+
1: Av([[1, 2]])

964:
000000000000000000000000000000000000000100000000000000000000000000000001000000000000000000000100000000000000010000000001000000

+-+-+-+-+
| | | |o|
+-+-+-+-+
|o| | | |
+-+-+-+-+
| |o| | |
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: Av([[1, 2]])

+-+-+-+-+
| | | |o|
+-+-+-+-+
|o| | | |
+-+-+-+-+
| |1| | |
+-+-+-+-+
| | |o| |
+-+-+-+-+
1: Av([[1, 2]])

+-+-+-+-+
| | | |o|
+-+-+-+-+
|1| | | |
+-+-+-+-+
| |o| | |
+-+-+-+-+
| | |o| |
+-+-+-+-+
1: Av([[1, 2]])

1254:
000000000000000000000000000000000001000000000000000000000000000000010000000000000000000001000000000000000100000000000000000000

+-+-+-+-+-+
| |o| | | |
+-+-+-+-+-+
|1| | | | |
+-+-+-+-+-+
| | | |o| |
+-+-+-+-+-+
| | | | |o|
+-+-+-+-+-+
| | |o| | |
+-+-+-+-+-+
1: Av([[1, 2]])

[2016-09-20 14:47:08.037266] Verifying cover [1, 38, 244, 349, 905, 964, 1254] up to length 10
[2016-09-20 14:47:08.037290] Multiple covers, but only using one for verification
[2016-09-20 14:47:22.475230] Cover verified up to length 10
