Hennings-MacBook-Pro:classical_from_Kuszmaul ulfarsson$ python ex3/ex3_rec1.py
[2016-09-20 15:47:44.409892] Generating permutations from input
[2016-09-20 15:47:44.843861] Finished in 0.434s
[2016-09-20 15:47:44.843898] Enumeration is [1, 1, 2, 5, 11, 19, 28, 38]
[2016-09-20 15:47:44.843925] Tayloring DAG
[2016-09-20 15:47:46.701930] Finished in 1.858s
[2016-09-20 15:47:46.702415] (0, 'Av([[1, 2, 3], [1, 3, 2], [2, 1, 3], [2, 3, 1], [3, 1, 2]])')
[2016-09-20 15:47:46.702444] (1, 'Av([[1, 2, 3], [1, 3, 2], [2, 1, 3], [2, 3, 1], [4, 3, 1, 2]])')
[2016-09-20 15:47:46.702459] (2, 'Av([[1, 2, 3], [1, 3, 2], [2, 1, 3], [3, 1, 2]])')
[2016-09-20 15:47:46.702471] (3, 'Av([[1, 2, 3], [1, 3, 2], [2, 1, 3], [4, 3, 1, 2]])')
[2016-09-20 15:47:46.702482] (4, 'Av([[1, 2, 3], [1, 3, 2], [2, 3, 1], [3, 1, 2]])')
[2016-09-20 15:47:46.702493] (5, 'Av([[1, 2, 3], [1, 3, 2], [2, 3, 1], [4, 3, 1, 2]])')
[2016-09-20 15:47:46.702504] (6, 'Av([[1, 2, 3], [1, 3, 2], [3, 1, 2]])')
[2016-09-20 15:47:46.702515] (7, 'Av([[1, 2, 3], [1, 3, 2], [4, 3, 1, 2]])')
[2016-09-20 15:47:46.702563] (8, 'Av([[1, 2]])')
[2016-09-20 15:47:46.702601] (9, 'Av([[1, 3, 2], [2, 1, 3], [2, 3, 1], [3, 1, 2], [3, 2, 1]])')
[2016-09-20 15:47:46.702617] (10, 'Av([[1, 3, 2], [2, 1, 3], [2, 3, 1], [3, 1, 2]])')
[2016-09-20 15:47:46.702629] (11, 'Av([[1, 3, 2], [2, 1, 3], [2, 3, 1], [3, 2, 1]])')
[2016-09-20 15:47:46.702640] (12, 'Av([[1, 3, 2], [2, 1, 3], [2, 3, 1], [4, 3, 1, 2]])')
[2016-09-20 15:47:46.702658] (13, 'Av([[1, 3, 2], [2, 1, 3], [2, 3, 4, 1], [3, 1, 2], [3, 2, 1]])')
[2016-09-20 15:47:46.702679] (14, 'Av([[1, 3, 2], [2, 1, 3], [2, 3, 4, 1], [3, 1, 2]])')
[2016-09-20 15:47:46.702694] (15, 'Av([[1, 3, 2], [2, 1, 3], [2, 3, 4, 1], [3, 2, 1]])')
[2016-09-20 15:47:46.702705] (16, 'Av([[1, 3, 2], [2, 1, 3], [2, 3, 4, 1], [4, 3, 1, 2]])')
[2016-09-20 15:47:46.702722] (17, 'Av([[1, 3, 2], [2, 3, 1, 4], [2, 3, 4, 1], [3, 1, 2], [3, 2, 1]])')
[2016-09-20 15:47:46.702741] (18, 'Av([[1, 3, 2], [2, 3, 1, 4], [2, 3, 4, 1], [3, 1, 2]])')
[2016-09-20 15:47:46.702755] (19, 'Av([[1, 3, 2], [2, 3, 1, 4], [2, 3, 4, 1], [3, 2, 1]])')
[2016-09-20 15:47:46.702766] (20, 'Av([[1, 3, 2], [2, 3, 1], [3, 1, 2], [3, 2, 1]])')
[2016-09-20 15:47:46.702784] (21, 'Av([[1, 3, 2], [2, 3, 1], [3, 1, 2]])')
[2016-09-20 15:47:46.702802] (22, 'Av([[1, 3, 2], [2, 3, 1], [3, 2, 1]])')
[2016-09-20 15:47:46.702816] (23, 'Av([[1, 3, 2], [2, 3, 1], [4, 3, 1, 2]])')
[2016-09-20 15:47:46.702829] (24, 'Av([[2, 1]])')
[2016-09-20 15:47:46.702849] (25, 'input permutation set')
[2016-09-20 15:47:46.702865] (26, 'point permutation set')
[2016-09-20 15:47:46.702877] (27, 'None')
[2016-09-20 15:47:46.703390] Generating rules
[2016-09-20 15:47:46.703409] Generate allowed neighbors, overlap
[2016-09-20 15:47:49.312184] Generate allowed neighbors, perm prop
[2016-09-20 15:47:54.619130] Generating point rules
[2016-09-20 15:47:54.619200] Cell (4,4)
100% [##################################################]  00:00:00
[2016-09-20 15:47:54.619988] Cell (4,3)
100% [##################################################]  00:00:00
[2016-09-20 15:47:54.621487] Cell (4,2)
100% [##################################################]  00:00:00
[2016-09-20 15:47:54.623831] Cell (4,1)
100% [##################################################]  00:00:00
[2016-09-20 15:47:54.627786] Cell (4,0)
100% [##################################################]  00:00:00
[2016-09-20 15:47:54.633454] Cell (3,4)
100% [##################################################]  00:00:00
[2016-09-20 15:47:54.642094] Cell (3,3)
100% [##################################################]  00:00:00
[2016-09-20 15:47:54.659306] Cell (3,2)
100% [##################################################]  00:00:00
[2016-09-20 15:47:54.681972] Cell (3,1)
100% [##################################################]  00:00:00
[2016-09-20 15:47:54.715299] Cell (3,0)
100% [##################################################]  00:00:00
[2016-09-20 15:47:54.764751] Cell (2,4)
100% [##################################################]  00:00:00
[2016-09-20 15:47:54.813535] Cell (2,3)
100% [##################################################]  00:00:00
[2016-09-20 15:47:54.888466] Cell (2,2)
100% [##################################################]  00:00:00
[2016-09-20 15:47:54.976396] Cell (2,1)
100% [##################################################]  00:00:00
[2016-09-20 15:47:55.088887] Cell (2,0)
100% [##################################################]  00:00:00
[2016-09-20 15:47:55.240689] Cell (1,4)
100% [##################################################]  00:00:00
[2016-09-20 15:47:55.348420] Cell (1,3)
100% [##################################################]  00:00:00
[2016-09-20 15:47:55.485099] Cell (1,2)
100% [##################################################]  00:00:00
[2016-09-20 15:47:55.626824] Cell (1,1)
100% [##################################################]  00:00:00
[2016-09-20 15:47:55.808864] Cell (1,0)
100% [##################################################]  00:00:00
[2016-09-20 15:47:56.043209] Cell (0,4)
100% [##################################################]  00:00:00
[2016-09-20 15:47:56.152107] Cell (0,3)
100% [##################################################]  00:00:00
[2016-09-20 15:47:56.258401] Cell (0,2)
100% [##################################################]  00:00:00
[2016-09-20 15:47:56.369467] Cell (0,1)
100% [##################################################]  00:00:00
[2016-09-20 15:47:56.488087] Cell (0,0)
100% [##################################################]  00:00:00
[2016-09-20 15:47:56.614855] Generating rules, 6 iterations
[2016-09-20 15:47:56.614889] Iteration 1
100% [##################################################]  00:00:00
[2016-09-20 15:47:57.456337] Iteration 2
100% [##################################################]  00:00:01
[2016-09-20 15:47:58.618352] Iteration 3
100% [##################################################]  00:00:03
[2016-09-20 15:48:02.218828] Iteration 4
100% [##################################################]  00:00:06
[2016-09-20 15:48:09.165438] Iteration 5
100% [##################################################]  00:00:03
[2016-09-20 15:48:12.960900] Iteration 6
100% [##################################################]  00:00:00
[2016-09-20 15:48:12.963270] Found 2209 rules, 834 of which are valid, 583 of which are distinct
[2016-09-20 15:48:12.963290] Death by overlap: 610
[2016-09-20 15:48:12.963299] Death by perm prop: 765
[2016-09-20 15:48:12.963307]
[2016-09-20 15:48:12.963407] Finding exact cover...
[2016-09-20 15:48:12.963435] Found:

Gurobi Optimizer version 6.5.0 build v6.5.0rc1 (mac64)
Copyright (c) 2015, Gurobi Optimization, Inc.

Read LP format model from file /var/folders/5c/0g9v9k4x76gcq3btks74_jpw0000gn/T/struct_tmpPGbBfe/inp.lp
Reading time = 0.00 seconds
(null): 105 rows, 583 columns, 6281 nonzeros
Optimize a model with 105 rows, 583 columns and 6281 nonzeros
Coefficient statistics:
  Matrix range    [1e+00, 1e+00]
  Objective range [1e+00, 1e+00]
  Bounds range    [1e+00, 1e+00]
  RHS range       [1e+00, 1e+00]
Presolve removed 73 rows and 448 columns
Presolve time: 0.02s
Presolved: 32 rows, 135 columns, 768 nonzeros
Variable types: 0 continuous, 135 integer (135 binary)
Found heuristic solution: objective 13.0000000
Found heuristic solution: objective 10.0000000

Root relaxation: objective 4.000000e+00, 11 iterations, 0.00 seconds

    Nodes    |    Current Node    |     Objective Bounds      |     Work
 Expl Unexpl |  Obj  Depth IntInf | Incumbent    BestBd   Gap | It/Node Time

*    0     0               0       4.0000000    4.00000  0.00%     -    0s

Explored 0 nodes (11 simplex iterations) in 0.02 seconds
Thread count was 8 (of 8 available processors)

Optimal solution found (tolerance 1.00e-04)
Best objective 4.000000000000e+00, best bound 4.000000000000e+00, gap 0.0%

Wrote result file '/var/folders/5c/0g9v9k4x76gcq3btks74_jpw0000gn/T/struct_tmpPGbBfe/out.sol'

[14, 410, 426, 565]

[2016-09-20 15:48:13.031467] Index:
 14:
011110000000000000111100000000000000000111000000000011100000000000011000000011000000001000010000000000000

+-+-+-+-+
|o| |o| |
+-+-+-+-+
| |o| | |
+-+-+-+-+
| | |1| |
+-+-+-+-+
| | | |o|
+-+-+-+-+
1: Av([[1, 2]])

410:
000000000011110000000000000000000000000000000011100000000000000000000000110000000000000001000000000000000

+-+-+-+-+
| |o| | |
+-+-+-+-+
|o| | | |
+-+-+-+-+
| | |o| |
+-+-+-+-+
| | |1| |
+-+-+-+-+
| | | |o|
+-+-+-+-+
1: Av([[1, 2]])

426:
000000000000001111000000000000000000000000000000011100000000000000000000001100000000000000100000001000000

+-+-+-+-+
| |o| | |
+-+-+-+-+
|o| | | |
+-+-+-+-+
| | | |o|
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: Av([[1, 3, 2], [2, 3, 1], [3, 1, 2]])

565:
100001111100000000000011111111111111111000111100000000011111111111100111000000111111110110001111110111111

+-+
|1|
+-+
1: Av([[1, 3, 2], [2, 3, 1], [4, 3, 1, 2]])

[2016-09-20 15:48:13.032246] Verifying cover [14, 410, 426, 565] up to length 10
[2016-09-20 15:48:17.082171] Cover verified up to length 10
