Hennings-MacBook-Pro:classical_from_Kuszmaul ulfarsson$ python ex2.py
[2016-09-20 13:49:25.047123] Generating permutations from input
[2016-09-20 13:49:26.091553] Finished in 1.044s
[2016-09-20 13:49:26.091602] Enumeration is [1, 1, 2, 6, 15, 44, 137]
[2016-09-20 13:49:26.091635] Tayloring DAG
[2016-09-20 13:49:30.220579] Finished in 4.129s
[2016-09-20 13:49:30.221293] (0, 'Av([[1, 2, 3], [1, 3, 2], [2, 1, 3], [2, 3, 1], [3, 1, 2]])')
[2016-09-20 13:49:30.221323] (1, 'Av([[1, 2, 3], [1, 3, 2], [2, 1, 3], [2, 3, 1]])')
[2016-09-20 13:49:30.221337] (2, 'Av([[1, 2, 3], [1, 3, 2], [2, 1, 3], [3, 1, 2]])')
[2016-09-20 13:49:30.221348] (3, 'Av([[1, 2, 3], [1, 3, 2], [2, 1, 3]])')
[2016-09-20 13:49:30.221359] (4, 'Av([[1, 2, 3], [1, 3, 2], [2, 3, 1], [3, 1, 2]])')
[2016-09-20 13:49:30.221368] (5, 'Av([[1, 2, 3], [1, 3, 2], [2, 3, 1]])')
[2016-09-20 13:49:30.221378] (6, 'Av([[1, 2, 3], [1, 3, 2], [3, 1, 2]])')
[2016-09-20 13:49:30.221388] (7, 'Av([[1, 2, 3], [1, 3, 2]])')
[2016-09-20 13:49:30.221398] (8, 'Av([[1, 2, 3], [1, 4, 3, 2], [2, 1, 3], [2, 3, 1], [3, 1, 2]])')
[2016-09-20 13:49:30.221408] (9, 'Av([[1, 2, 3], [1, 4, 3, 2], [2, 1, 3], [2, 3, 1], [4, 1, 3, 2]])')
[2016-09-20 13:49:30.221419] (10, 'Av([[1, 2, 3], [1, 4, 3, 2], [2, 1, 3], [2, 4, 3, 1], [3, 1, 2]])')
[2016-09-20 13:49:30.221430] (11, 'Av([[1, 2, 3], [1, 4, 3, 2], [2, 1, 3], [2, 4, 3, 1], [4, 1, 3, 2]])')
[2016-09-20 13:49:30.221440] (12, 'Av([[1, 2, 3], [1, 4, 3, 2], [2, 1, 4, 3], [2, 3, 1], [3, 1, 2]])')
[2016-09-20 13:49:30.221450] (13, 'Av([[1, 2, 3], [1, 4, 3, 2], [2, 1, 4, 3], [2, 3, 1], [4, 1, 3, 2]])')
[2016-09-20 13:49:30.221460] (14, 'Av([[1, 2, 3], [1, 4, 3, 2], [2, 1, 4, 3], [2, 4, 3, 1], [3, 1, 2]])')
[2016-09-20 13:49:30.221471] (15, 'Av([[1, 2, 3], [1, 4, 3, 2], [2, 1, 4, 3], [2, 4, 3, 1], [3, 1, 4, 2], [4, 1, 3, 2]])')
[2016-09-20 13:49:30.221482] (16, 'Av([[1, 2, 4, 3], [1, 3, 2, 4], [1, 3, 4, 2], [1, 4, 2, 3], [2, 1, 4, 3], [3, 1, 4, 2], [3, 2, 1]])')
[2016-09-20 13:49:30.221493] (17, 'Av([[1, 2, 4, 3], [1, 3, 2, 4], [1, 3, 4, 2], [1, 4, 3, 2], [2, 1, 4, 3], [2, 4, 3, 1], [3, 1, 2]])')
[2016-09-20 13:49:30.221503] (18, 'Av([[1, 2, 4, 3], [1, 3, 2, 4], [1, 3, 4, 2], [2, 1, 4, 3], [3, 1, 2], [3, 2, 1]])')
[2016-09-20 13:49:30.221514] (19, 'Av([[1, 2, 4, 3], [1, 3, 2, 4], [1, 4, 2, 3], [1, 4, 3, 2], [2, 1, 4, 3], [2, 3, 1], [4, 1, 3, 2]])')
[2016-09-20 13:49:30.221525] (20, 'Av([[1, 2, 4, 3], [1, 3, 2, 4], [1, 4, 2, 3], [2, 1, 4, 3], [2, 3, 1], [3, 2, 1]])')
[2016-09-20 13:49:30.221535] (21, 'Av([[1, 2, 4, 3], [1, 3, 2, 4], [1, 4, 3, 2], [2, 1, 4, 3], [2, 3, 1], [3, 1, 2]])')
[2016-09-20 13:49:30.221545] (22, 'Av([[1, 2, 4, 3], [1, 3, 2, 4], [2, 1, 4, 3], [2, 3, 1], [3, 1, 2], [3, 2, 1]])')
[2016-09-20 13:49:30.221556] (23, 'Av([[1, 2, 4, 3], [1, 3, 4, 2], [1, 4, 2, 3], [1, 4, 3, 2], [2, 1, 3], [2, 4, 3, 1], [4, 1, 3, 2]])')
[2016-09-20 13:49:30.221566] (24, 'Av([[1, 2, 4, 3], [1, 3, 4, 2], [1, 4, 2, 3], [2, 1, 3], [3, 2, 1]])')
[2016-09-20 13:49:30.221576] (25, 'Av([[1, 2, 4, 3], [1, 3, 4, 2], [1, 4, 3, 2], [2, 1, 3], [2, 4, 3, 1], [3, 1, 2]])')
[2016-09-20 13:49:30.221587] (26, 'Av([[1, 2, 4, 3], [1, 3, 4, 2], [2, 1, 3], [3, 1, 2], [3, 2, 1]])')
[2016-09-20 13:49:30.221597] (27, 'Av([[1, 2, 4, 3], [1, 4, 2, 3], [1, 4, 3, 2], [2, 1, 3], [2, 3, 1], [4, 1, 3, 2]])')
[2016-09-20 13:49:30.221607] (28, 'Av([[1, 2, 4, 3], [1, 4, 2, 3], [2, 1, 3], [2, 3, 1], [3, 2, 1]])')
[2016-09-20 13:49:30.221618] (29, 'Av([[1, 2, 4, 3], [1, 4, 3, 2], [2, 1, 3], [2, 3, 1], [3, 1, 2]])')
[2016-09-20 13:49:30.221628] (30, 'Av([[1, 2, 4, 3], [2, 1, 3], [2, 3, 1], [3, 1, 2], [3, 2, 1]])')
[2016-09-20 13:49:30.221638] (31, 'Av([[1, 2]])')
[2016-09-20 13:49:30.221648] (32, 'Av([[1, 3, 2], [2, 1, 3], [2, 3, 1], [3, 1, 2], [3, 2, 1]])')
[2016-09-20 13:49:30.221658] (33, 'Av([[1, 3, 2], [2, 1, 3], [2, 3, 1], [3, 1, 2]])')
[2016-09-20 13:49:30.221668] (34, 'Av([[1, 3, 2], [2, 1, 3], [2, 3, 1], [3, 2, 1]])')
[2016-09-20 13:49:30.221679] (35, 'Av([[1, 3, 2], [2, 1, 3], [2, 3, 1]])')
[2016-09-20 13:49:30.221689] (36, 'Av([[1, 3, 2], [2, 1, 3], [3, 1, 2], [3, 2, 1]])')
[2016-09-20 13:49:30.221698] (37, 'Av([[1, 3, 2], [2, 1, 3], [3, 1, 2]])')
[2016-09-20 13:49:30.221709] (38, 'Av([[1, 3, 2], [2, 1, 3], [3, 2, 1]])')
[2016-09-20 13:49:30.221719] (39, 'Av([[1, 3, 2], [2, 1, 3]])')
[2016-09-20 13:49:30.221728] (40, 'Av([[1, 3, 2], [2, 3, 1], [3, 1, 2], [3, 2, 1]])')
[2016-09-20 13:49:30.221739] (41, 'Av([[1, 3, 2], [2, 3, 1], [3, 1, 2]])')
[2016-09-20 13:49:30.221749] (42, 'Av([[1, 3, 2], [2, 3, 1], [3, 2, 1]])')
[2016-09-20 13:49:30.221759] (43, 'Av([[1, 3, 2], [2, 3, 1]])')
[2016-09-20 13:49:30.221769] (44, 'Av([[1, 3, 2], [3, 1, 2], [3, 2, 1]])')
[2016-09-20 13:49:30.221779] (45, 'Av([[1, 3, 2], [3, 1, 2]])')
[2016-09-20 13:49:30.221789] (46, 'Av([[1, 3, 2], [3, 2, 1]])')
[2016-09-20 13:49:30.221800] (47, 'Av([[1, 3, 2]])')
[2016-09-20 13:49:30.221810] (48, 'Av([[2, 1]])')
[2016-09-20 13:49:30.221819] (49, 'input permutation set')
[2016-09-20 13:49:30.221830] (50, 'point permutation set')
[2016-09-20 13:49:30.221840] (51, 'None')
[2016-09-20 13:49:30.223163] Generating rules
[2016-09-20 13:49:30.223179] Generate allowed neighbors, overlap
[2016-09-20 13:49:35.794207] Generate allowed neighbors, perm prop
[2016-09-20 13:50:15.605768] Generating point rules
[2016-09-20 13:50:15.605830] Cell (3,3)
100% [##################################################]  00:00:00
[2016-09-20 13:50:15.606380] Cell (3,2)
100% [##################################################]  00:00:00
[2016-09-20 13:50:15.607343] Cell (3,1)
100% [##################################################]  00:00:00
[2016-09-20 13:50:15.609534] Cell (3,0)
100% [##################################################]  00:00:00
[2016-09-20 13:50:15.613904] Cell (2,3)
100% [##################################################]  00:00:00
[2016-09-20 13:50:15.621165] Cell (2,2)
100% [##################################################]  00:00:00
[2016-09-20 13:50:15.632888] Cell (2,1)
100% [##################################################]  00:00:00
[2016-09-20 13:50:15.652199] Cell (2,0)
100% [##################################################]  00:00:00
[2016-09-20 13:50:15.685137] Cell (1,3)
100% [##################################################]  00:00:00
[2016-09-20 13:50:15.719290] Cell (1,2)
100% [##################################################]  00:00:00
[2016-09-20 13:50:15.762214] Cell (1,1)
100% [##################################################]  00:00:00
[2016-09-20 13:50:15.817578] Cell (1,0)
100% [##################################################]  00:00:00
[2016-09-20 13:50:15.888875] Cell (0,3)
100% [##################################################]  00:00:00
[2016-09-20 13:50:15.928076] Cell (0,2)
100% [##################################################]  00:00:00
[2016-09-20 13:50:15.968613] Cell (0,1)
100% [##################################################]  00:00:00
[2016-09-20 13:50:16.007846] Cell (0,0)
100% [##################################################]  00:00:00
[2016-09-20 13:50:16.051931] Generating rules, 5 iterations
[2016-09-20 13:50:16.051960] Iteration 1
100% [##################################################]  00:00:01
[2016-09-20 13:50:17.393873] Iteration 2
100% [##################################################]  00:01:25
[2016-09-20 13:51:43.210530] Iteration 3
100% [##################################################]  00:04:18
[2016-09-20 13:56:01.899666] Iteration 4
100% [##################################################]  00:03:54
[2016-09-20 13:59:56.299256] Iteration 5
100% [##################################################]  00:00:00
[2016-09-20 13:59:56.425592] Found 56772 rules, 17875 of which are valid, 16640 of which are distinct
[2016-09-20 13:59:56.425635] Death by overlap: 36335
[2016-09-20 13:59:56.425646] Death by perm prop: 2562
[2016-09-20 13:59:56.425653]
[2016-09-20 13:59:56.425846] Finding exact cover...
[2016-09-20 13:59:56.426272] Found:

Gurobi Optimizer version 6.5.0 build v6.5.0rc1 (mac64)
Copyright (c) 2015, Gurobi Optimization, Inc.

Read LP format model from file /var/folders/5c/0g9v9k4x76gcq3btks74_jpw0000gn/T/struct_tmpSXVgss/inp.lp
Reading time = 0.23 seconds
(null): 206 rows, 16640 columns, 617601 nonzeros
Optimize a model with 206 rows, 16640 columns and 617601 nonzeros
Coefficient statistics:
  Matrix range    [1e+00, 1e+00]
  Objective range [1e+00, 1e+00]
  Bounds range    [1e+00, 1e+00]
  RHS range       [1e+00, 1e+00]
Presolve removed 206 rows and 16640 columns
Presolve time: 2.35s
Presolve: All rows and columns removed

Explored 0 nodes (0 simplex iterations) in 2.75 seconds
Thread count was 1 (of 8 available processors)

Optimal solution found (tolerance 1.00e-04)
Best objective 2.000000000000e+00, best bound 2.000000000000e+00, gap 0.0%

Wrote result file '/var/folders/5c/0g9v9k4x76gcq3btks74_jpw0000gn/T/struct_tmpSXVgss/out.sol'

[9814, 16623]

[2016-09-20 14:00:01.061796] Index:
9814:
00000000000000000000000000000000000000000000000000000000000000000000000000000000000011111000000000000000000000000000000000000000000000000000000000000000000000000000011000000000000000000000000100000000100000

+-+-+-+-+
| |o| | |
+-+-+-+-+
| | | |o|
+-+-+-+-+
|o| | | |
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: Av([[1, 3, 2]])

16623:
11111111111111111111111111111111111111111111111111111111111111111111111111111111111100000111111111111111111111111111111111111111111111111111111111111111111111111111100111111111111111111111111011111111011111

+-+
|1|
+-+
1: Av([[1, 3, 2]])

[2016-09-20 14:00:01.065628] Verifying cover [9814, 16623] up to length 10
[2016-09-20 14:11:11.325590] Cover verified up to length 10
