[2016-10-25 10:45:59.451598] Generating permutations from input
[2016-10-25 10:45:59.489665] Finished in 0.038s
[2016-10-25 10:45:59.489699] Enumeration is [1, 1, 2, 6, 15, 44, 137]
[2016-10-25 10:45:59.489729] Tayloring DAG
[2016-10-25 10:45:59.871746] Finished in 0.382s
[2016-10-25 10:45:59.872413] (0, 'Av([[1, 2, 3], [1, 3, 2], [2, 1, 3], [2, 3, 1], [3, 1, 2]])')
[2016-10-25 10:45:59.872441] (1, 'Av([[1, 2, 3], [1, 3, 2], [2, 1, 3], [2, 3, 1]])')
[2016-10-25 10:45:59.872453] (2, 'Av([[1, 2, 3], [1, 3, 2], [2, 1, 3], [3, 1, 2]])')
[2016-10-25 10:45:59.872463] (3, 'Av([[1, 2, 3], [1, 3, 2], [2, 1, 3]])')
[2016-10-25 10:45:59.872473] (4, 'Av([[1, 2, 3], [1, 3, 2], [2, 3, 1], [3, 1, 2]])')
[2016-10-25 10:45:59.872483] (5, 'Av([[1, 2, 3], [1, 3, 2], [2, 3, 1]])')
[2016-10-25 10:45:59.872493] (6, 'Av([[1, 2, 3], [1, 3, 2], [3, 1, 2]])')
[2016-10-25 10:45:59.872503] (7, 'Av([[1, 2, 3], [1, 3, 2]])')
[2016-10-25 10:45:59.872513] (8, 'Av([[1, 2, 3], [1, 4, 3, 2], [2, 1, 3], [2, 3, 1], [3, 1, 2]])')
[2016-10-25 10:45:59.872523] (9, 'Av([[1, 2, 3], [1, 4, 3, 2], [2, 1, 3], [2, 3, 1], [4, 1, 3, 2]])')
[2016-10-25 10:45:59.872533] (10, 'Av([[1, 2, 3], [1, 4, 3, 2], [2, 1, 3], [2, 4, 3, 1], [3, 1, 2]])')
[2016-10-25 10:45:59.872543] (11, 'Av([[1, 2, 3], [1, 4, 3, 2], [2, 1, 3], [2, 4, 3, 1], [4, 1, 3, 2]])')
[2016-10-25 10:45:59.872553] (12, 'Av([[1, 2, 3], [1, 4, 3, 2], [2, 1, 4, 3], [2, 3, 1], [3, 1, 2]])')
[2016-10-25 10:45:59.872563] (13, 'Av([[1, 2, 3], [1, 4, 3, 2], [2, 1, 4, 3], [2, 3, 1], [4, 1, 3, 2]])')
[2016-10-25 10:45:59.872573] (14, 'Av([[1, 2, 3], [1, 4, 3, 2], [2, 1, 4, 3], [2, 4, 3, 1], [3, 1, 2]])')
[2016-10-25 10:45:59.872592] (15, 'Av([[1, 2, 3], [1, 4, 3, 2], [2, 1, 4, 3], [2, 4, 3, 1], [3, 1, 4, 2], [4, 1, 3, 2]])')
[2016-10-25 10:45:59.872611] (16, 'Av([[1, 2, 4, 3], [1, 3, 2, 4], [1, 3, 4, 2], [1, 4, 2, 3], [2, 1, 4, 3], [3, 1, 4, 2], [3, 2, 1]])')
[2016-10-25 10:45:59.872630] (17, 'Av([[1, 2, 4, 3], [1, 3, 2, 4], [1, 3, 4, 2], [1, 4, 3, 2], [2, 1, 4, 3], [2, 4, 3, 1], [3, 1, 2]])')
[2016-10-25 10:45:59.872649] (18, 'Av([[1, 2, 4, 3], [1, 3, 2, 4], [1, 3, 4, 2], [2, 1, 4, 3], [3, 1, 2], [3, 2, 1]])')
[2016-10-25 10:45:59.872669] (19, 'Av([[1, 2, 4, 3], [1, 3, 2, 4], [1, 4, 2, 3], [1, 4, 3, 2], [2, 1, 4, 3], [2, 3, 1], [4, 1, 3, 2]])')
[2016-10-25 10:45:59.872688] (20, 'Av([[1, 2, 4, 3], [1, 3, 2, 4], [1, 4, 2, 3], [2, 1, 4, 3], [2, 3, 1], [3, 2, 1]])')
[2016-10-25 10:45:59.872706] (21, 'Av([[1, 2, 4, 3], [1, 3, 2, 4], [1, 4, 3, 2], [2, 1, 4, 3], [2, 3, 1], [3, 1, 2]])')
[2016-10-25 10:45:59.872725] (22, 'Av([[1, 2, 4, 3], [1, 3, 2, 4], [2, 1, 4, 3], [2, 3, 1], [3, 1, 2], [3, 2, 1]])')
[2016-10-25 10:45:59.872745] (23, 'Av([[1, 2, 4, 3], [1, 3, 4, 2], [1, 4, 2, 3], [1, 4, 3, 2], [2, 1, 3], [2, 4, 3, 1], [4, 1, 3, 2]])')
[2016-10-25 10:45:59.872763] (24, 'Av([[1, 2, 4, 3], [1, 3, 4, 2], [1, 4, 2, 3], [2, 1, 3], [3, 2, 1]])')
[2016-10-25 10:45:59.872783] (25, 'Av([[1, 2, 4, 3], [1, 3, 4, 2], [1, 4, 3, 2], [2, 1, 3], [2, 4, 3, 1], [3, 1, 2]])')
[2016-10-25 10:45:59.872802] (26, 'Av([[1, 2, 4, 3], [1, 3, 4, 2], [2, 1, 3], [3, 1, 2], [3, 2, 1]])')
[2016-10-25 10:45:59.872822] (27, 'Av([[1, 2, 4, 3], [1, 4, 2, 3], [1, 4, 3, 2], [2, 1, 3], [2, 3, 1], [4, 1, 3, 2]])')
[2016-10-25 10:45:59.872840] (28, 'Av([[1, 2, 4, 3], [1, 4, 2, 3], [2, 1, 3], [2, 3, 1], [3, 2, 1]])')
[2016-10-25 10:45:59.872858] (29, 'Av([[1, 2, 4, 3], [1, 4, 3, 2], [2, 1, 3], [2, 3, 1], [3, 1, 2]])')
[2016-10-25 10:45:59.872877] (30, 'Av([[1, 2, 4, 3], [2, 1, 3], [2, 3, 1], [3, 1, 2], [3, 2, 1]])')
[2016-10-25 10:45:59.872895] (31, 'Av([[1, 2]])')
[2016-10-25 10:45:59.872911] (32, 'Av([[1, 3, 2], [2, 1, 3], [2, 3, 1], [3, 1, 2], [3, 2, 1]])')
[2016-10-25 10:45:59.872930] (33, 'Av([[1, 3, 2], [2, 1, 3], [2, 3, 1], [3, 1, 2]])')
[2016-10-25 10:45:59.872949] (34, 'Av([[1, 3, 2], [2, 1, 3], [2, 3, 1], [3, 2, 1]])')
[2016-10-25 10:45:59.872966] (35, 'Av([[1, 3, 2], [2, 1, 3], [2, 3, 1]])')
[2016-10-25 10:45:59.872983] (36, 'Av([[1, 3, 2], [2, 1, 3], [3, 1, 2], [3, 2, 1]])')
[2016-10-25 10:45:59.873003] (37, 'Av([[1, 3, 2], [2, 1, 3], [3, 1, 2]])')
[2016-10-25 10:45:59.873020] (38, 'Av([[1, 3, 2], [2, 1, 3], [3, 2, 1]])')
[2016-10-25 10:45:59.873074] (39, 'Av([[1, 3, 2], [2, 1, 3]])')
[2016-10-25 10:45:59.873105] (40, 'Av([[1, 3, 2], [2, 3, 1], [3, 1, 2], [3, 2, 1]])')
[2016-10-25 10:45:59.873125] (41, 'Av([[1, 3, 2], [2, 3, 1], [3, 1, 2]])')
[2016-10-25 10:45:59.873145] (42, 'Av([[1, 3, 2], [2, 3, 1], [3, 2, 1]])')
[2016-10-25 10:45:59.873164] (43, 'Av([[1, 3, 2], [2, 3, 1]])')
[2016-10-25 10:45:59.873178] (44, 'Av([[1, 3, 2], [3, 1, 2], [3, 2, 1]])')
[2016-10-25 10:45:59.873196] (45, 'Av([[1, 3, 2], [3, 1, 2]])')
[2016-10-25 10:45:59.873213] (46, 'Av([[1, 3, 2], [3, 2, 1]])')
[2016-10-25 10:45:59.873239] (47, 'Av([[1, 3, 2]])')
[2016-10-25 10:45:59.873254] (48, 'Av([[2, 1]])')
[2016-10-25 10:45:59.873268] (49, 'input permutation set')
[2016-10-25 10:45:59.873283] (50, 'point permutation set')
[2016-10-25 10:45:59.873297] (51, 'None')
[2016-10-25 10:45:59.875227] Generating rules
[2016-10-25 10:45:59.875258] Generate allowed neighbors, perm prop
[2016-10-25 10:46:23.421908] Generating point rules
[2016-10-25 10:46:23.421968] Cell (3,3)
100% [##################################################]  00:00:00
[2016-10-25 10:46:23.422485] Cell (3,2)
100% [##################################################]  00:00:00
[2016-10-25 10:46:23.423219] Cell (3,1)
100% [##################################################]  00:00:00
[2016-10-25 10:46:23.425145] Cell (3,0)
100% [##################################################]  00:00:00
[2016-10-25 10:46:23.429552] Cell (2,3)
100% [##################################################]  00:00:00
[2016-10-25 10:46:23.436610] Cell (2,2)
100% [##################################################]  00:00:00
[2016-10-25 10:46:23.448281] Cell (2,1)
100% [##################################################]  00:00:00
[2016-10-25 10:46:23.471211] Cell (2,0)
100% [##################################################]  00:00:00
[2016-10-25 10:46:23.510470] Cell (1,3)
100% [##################################################]  00:00:00
[2016-10-25 10:46:23.545773] Cell (1,2)
100% [##################################################]  00:00:00
[2016-10-25 10:46:23.587653] Cell (1,1)
100% [##################################################]  00:00:00
[2016-10-25 10:46:23.645109] Cell (1,0)
100% [##################################################]  00:00:00
[2016-10-25 10:46:23.721336] Cell (0,3)
100% [##################################################]  00:00:00
[2016-10-25 10:46:23.759488] Cell (0,2)
100% [##################################################]  00:00:00
[2016-10-25 10:46:23.800020] Cell (0,1)
100% [##################################################]  00:00:00
[2016-10-25 10:46:23.843100] Cell (0,0)
100% [##################################################]  00:00:00
[2016-10-25 10:46:23.890786] Number of point grids: 92
[2016-10-25 10:46:23.890968] Generating rules, 5 iterations
[2016-10-25 10:46:23.890995] Iteration 1
100% [##################################################]  00:00:00
[2016-10-25 10:46:24.106650] Iteration 2
100% [##################################################]  00:00:00
[2016-10-25 10:46:24.472074] Iteration 3
100% [##################################################]  00:00:27
[2016-10-25 10:46:52.437457] Iteration 4
100% [##################################################]  00:03:52
[2016-10-25 10:50:44.593546] Iteration 5
100% [##################################################]  00:00:00
[2016-10-25 10:50:44.720512] Found 57614 rules, 17875 of which are valid, 16640 of which are distinct
[2016-10-25 10:50:44.720549] Death by overlap: 36740
[2016-10-25 10:50:44.720559] Death by perm prop: 2999
[2016-10-25 10:50:44.720566]
[2016-10-25 10:50:44.720755] Finding exact cover...
[2016-10-25 10:50:44.721204] Found:

Gurobi Optimizer version 6.5.0 build v6.5.0rc1 (mac64)
Copyright (c) 2015, Gurobi Optimization, Inc.

Read LP format model from file /var/folders/5c/0g9v9k4x76gcq3btks74_jpw0000gn/T/struct_tmpP4xl55/inp.lp
Reading time = 0.24 seconds
(null): 206 rows, 16640 columns, 617601 nonzeros
Optimize a model with 206 rows, 16640 columns and 617601 nonzeros
Coefficient statistics:
  Matrix range    [1e+00, 1e+00]
  Objective range [1e+00, 1e+00]
  Bounds range    [1e+00, 1e+00]
  RHS range       [1e+00, 1e+00]
Presolve removed 206 rows and 16640 columns
Presolve time: 2.34s
Presolve: All rows and columns removed

Explored 0 nodes (0 simplex iterations) in 2.77 seconds
Thread count was 1 (of 8 available processors)

Optimal solution found (tolerance 1.00e-04)
Best objective 2.000000000000e+00, best bound 2.000000000000e+00, gap 0.0%

Wrote result file '/var/folders/5c/0g9v9k4x76gcq3btks74_jpw0000gn/T/struct_tmpP4xl55/out.sol'

[3946, 16623]

[2016-10-25 10:50:49.417322] Index:
3946:
00000000000000000000000000000000000000000000000000000000000000000000000000000000000011111000000000000000000000000000000000000000000000000000000000000000000000000000011000000000000000000000000100000000100000

+-+-+-+-+
| |o| | |
+-+-+-+-+
| | | |o|
+-+-+-+-+
|o| | | |
+-+-+-+-+
| | |1| |
+-+-+-+-+
1: Av([[1, 3, 2]])

16623:
11111111111111111111111111111111111111111111111111111111111111111111111111111111111100000111111111111111111111111111111111111111111111111111111111111111111111111111100111111111111111111111111011111111011111

+-+
|1|
+-+
1: Av([[1, 3, 2]])

[2016-10-25 10:50:49.420696] Verifying cover [3946, 16623] up to length 10
