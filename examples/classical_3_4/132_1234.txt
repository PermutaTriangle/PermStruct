[2016-10-25 10:36:09.560408] Generating permutations from input
[2016-10-25 10:36:09.564167] Finished in 0.004s
[2016-10-25 10:36:09.564196] Enumeration is [1, 1, 2, 5, 13, 34]
[2016-10-25 10:36:09.564221] Tayloring DAG
[2016-10-25 10:36:09.571516] Finished in 0.007s
[2016-10-25 10:36:09.571570] (0, 'Av([[1, 2, 3], [1, 3, 2]])')
[2016-10-25 10:36:09.571585] (1, 'Av([[1, 2]])')
[2016-10-25 10:36:09.571596] (2, 'input permutation set')
[2016-10-25 10:36:09.571606] (3, 'point permutation set')
[2016-10-25 10:36:09.571616] (4, 'None')
[2016-10-25 10:36:09.571884] Generating rules
[2016-10-25 10:36:09.571897] Generate allowed neighbors, perm prop
[2016-10-25 10:36:09.753694] Generating point rules
[2016-10-25 10:36:09.753737] Cell (2,2)
  0% [--------------------------------------------------] 100% [##################################################]  00:00:00
[2016-10-25 10:36:09.754154] Cell (2,1)
  0% [--------------------------------------------------] 100% [##################################################]  00:00:00
[2016-10-25 10:36:09.754740] Cell (2,0)
  0% [--------------------------------------------------] 100% [##################################################]  00:00:00
[2016-10-25 10:36:09.755979] Cell (1,2)
  0% [--------------------------------------------------] 100% [##################################################]  00:00:00
[2016-10-25 10:36:09.757966] Cell (1,1)
  0% [--------------------------------------------------] 100% [##################################################]  00:00:00
[2016-10-25 10:36:09.761350] Cell (1,0)
  0% [--------------------------------------------------] 100% [##################################################]  00:00:00
[2016-10-25 10:36:09.766210] Cell (0,2)
  0% [--------------------------------------------------] 100% [##################################################]  00:00:00
[2016-10-25 10:36:09.769992] Cell (0,1)
  0% [--------------------------------------------------] 100% [##################################################]  00:00:00
[2016-10-25 10:36:09.773691] Cell (0,0)
  0% [--------------------------------------------------] 100% [##################################################]  00:00:00
[2016-10-25 10:36:09.777661] Number of point grids: 19
[2016-10-25 10:36:09.777752] Generating rules, 4 iterations
[2016-10-25 10:36:09.777777] Iteration 1
  0% [--------------------------------------------------] 100% [##################################################]  00:00:00
[2016-10-25 10:36:09.782818] Iteration 2
  0% [--------------------------------------------------] 100% [##################################################]  00:00:00
[2016-10-25 10:36:09.809159] Iteration 3
  0% [--------------------------------------------------] 100% [##################################################]  00:00:00
[2016-10-25 10:36:10.031444] Iteration 4
  0% [--------------------------------------------------] 100% [##################################################]  00:00:00
[2016-10-25 10:36:10.031834] Found 110 rules, 94 of which are valid, 76 of which are distinct
[2016-10-25 10:36:10.031852] Death by overlap: 15
[2016-10-25 10:36:10.031862] Death by perm prop: 1
[2016-10-25 10:36:10.031871] 
[2016-10-25 10:36:10.031899] Finding exact cover...
[2016-10-25 10:36:10.031916] Found:

Gurobi Optimizer version 6.5.0 build v6.5.0rc1 (mac64)
Copyright (c) 2015, Gurobi Optimization, Inc.

Read LP format model from file /var/folders/5c/0g9v9k4x76gcq3btks74_jpw0000gn/T/struct_tmpyj3UxI/inp.lp
Reading time = 0.00 seconds
(null): 56 rows, 76 columns, 912 nonzeros
Optimize a model with 56 rows, 76 columns and 912 nonzeros
Coefficient statistics:
  Matrix range    [1e+00, 1e+00]
  Objective range [1e+00, 1e+00]
  Bounds range    [1e+00, 1e+00]
  RHS range       [1e+00, 1e+00]
Found heuristic solution: objective 2
Presolve removed 56 rows and 76 columns
Presolve time: 0.00s
Presolve: All rows and columns removed

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 1 (of 8 available processors)

Optimal solution found (tolerance 1.00e-04)
Best objective 2.000000000000e+00, best bound 2.000000000000e+00, gap 0.0%

Wrote result file '/var/folders/5c/0g9v9k4x76gcq3btks74_jpw0000gn/T/struct_tmpyj3UxI/out.sol'

[2016-10-25 10:36:10.057615] Index:
[2016-10-25 10:36:10.057925] Verifying cover [1, 75] up to length 11
[2016-10-25 10:36:10.057951] Multiple covers, but only using one for verification
[2016-10-25 10:36:58.520133] Cover verified up to length 11
[2016-10-25 10:36:58.521420] Cover verified
[2016-10-25 10:36:58.521453] (0, 'Av([[1, 2, 3], [1, 3, 2]])')
[2016-10-25 10:36:58.521464] (1, 'Av([[1, 2]])')
[2016-10-25 10:36:58.521474] (2, 'input permutation set')
[2016-10-25 10:36:58.521483] (3, 'point permutation set')
[2016-10-25 10:36:58.521496] (4, 'None')
[1, 75]

  1: 
00000000000000000000000000000000000000000000000000000001

+-+
| |
+-+

 75: 
11111111111111111111111111111111111111111111111111111110

+-+-+-+
|X| | |
+-+-+-+
| | |o|
+-+-+-+
| |1| |
+-+-+-+
1: Av([[1, 2, 3], [1, 3, 2]])

+-+-+-+
| |o| |
+-+-+-+
|1| | |
+-+-+-+
| | |X|
+-+-+-+
1: Av([[1, 2, 3], [1, 3, 2]])

Next verify_bound (or 0 to stop): 