[2016-10-25 10:38:34.171298] Generating permutations from input
[2016-10-25 10:38:34.213442] Finished in 0.042s
[2016-10-25 10:38:34.213474] Enumeration is [1, 1, 2, 5, 13, 34, 89, 233]
[2016-10-25 10:38:34.213507] Tayloring DAG
[2016-10-25 10:38:34.315900] Finished in 0.102s
[2016-10-25 10:38:34.316132] (0, 'Av([[1, 2, 3], [1, 3, 2], [2, 1, 3], [3, 1, 2]])')
[2016-10-25 10:38:34.316148] (1, 'Av([[1, 2, 3], [1, 3, 2], [2, 1, 3]])')
[2016-10-25 10:38:34.316157] (2, 'Av([[1, 2, 3], [1, 3, 2], [3, 1, 2]])')
[2016-10-25 10:38:34.316166] (3, 'Av([[1, 2, 3], [1, 3, 2]])')
[2016-10-25 10:38:34.316175] (4, 'Av([[1, 2]])')
[2016-10-25 10:38:34.316184] (5, 'Av([[1, 3, 2], [2, 1, 3], [3, 1, 2]])')
[2016-10-25 10:38:34.316196] (6, 'Av([[1, 3, 2], [2, 1, 3]])')
[2016-10-25 10:38:34.316205] (7, 'Av([[1, 3, 2], [3, 1, 2]])')
[2016-10-25 10:38:34.316214] (8, 'Av([[2, 1]])')
[2016-10-25 10:38:34.316223] (9, 'input permutation set')
[2016-10-25 10:38:34.316235] (10, 'point permutation set')
[2016-10-25 10:38:34.316252] (11, 'None')
[2016-10-25 10:38:34.318996] Generating rules
[2016-10-25 10:38:34.319011] Generate allowed neighbors, perm prop
[2016-10-25 10:38:35.491395] Generating point rules
[2016-10-25 10:38:35.491438] Cell (2,2)
  0% [--------------------------------------------------] 100% [##################################################]  00:00:00
[2016-10-25 10:38:35.491784] Cell (2,1)
  0% [--------------------------------------------------] 100% [##################################################]  00:00:00
[2016-10-25 10:38:35.492877] Cell (2,0)
  0% [--------------------------------------------------] 100% [##################################################]  00:00:00
[2016-10-25 10:38:35.494496] Cell (1,2)
  0% [--------------------------------------------------] 100% [##################################################]  00:00:00
[2016-10-25 10:38:35.497155] Cell (1,1)
  0% [--------------------------------------------------] 100% [##################################################]  00:00:00
[2016-10-25 10:38:35.500600] Cell (1,0)
  0% [--------------------------------------------------] 100% [##################################################]  00:00:00
[2016-10-25 10:38:35.506178] Cell (0,2)
  0% [--------------------------------------------------] 100% [##################################################]  00:00:00
[2016-10-25 10:38:35.510173] Cell (0,1)
  0% [--------------------------------------------------] 100% [##################################################]  00:00:00
[2016-10-25 10:38:35.513962] Cell (0,0)
  0% [--------------------------------------------------] 100% [##################################################]  00:00:00
[2016-10-25 10:38:35.517808] Number of point grids: 19
[2016-10-25 10:38:35.517861] Generating rules, 4 iterations
[2016-10-25 10:38:35.517877] Iteration 1
  0% [--------------------------------------------------] 100% [##################################################]  00:00:00
[2016-10-25 10:38:35.608616] Iteration 2
  0% [--------------------------------------------------] 100% [##################################################]  00:00:00
[2016-10-25 10:38:35.869408] Iteration 3
  0% [--------------------------------------------------]   7% [####----------------------------------------------]   8% [####----------------------------------------------]  12% [######--------------------------------------------]  22% [###########---------------------------------------]  00:00:10 35% [##################--------------------------------]  00:00:06 45% [######################----------------------------]  00:00:04 59% [##############################--------------------]  00:00:03 69% [###################################---------------]  00:00:02 78% [#######################################-----------]  00:00:01 88% [############################################------]  00:00:00100% [##################################################]  00:00:06
[2016-10-25 10:38:42.232038] Iteration 4
  0% [--------------------------------------------------] 100% [##################################################]  00:00:00
[2016-10-25 10:38:42.233104] Found 503 rules, 349 of which are valid, 285 of which are distinct
[2016-10-25 10:38:42.233160] Death by overlap: 138
[2016-10-25 10:38:42.233182] Death by perm prop: 16
[2016-10-25 10:38:42.233196] 
[2016-10-25 10:38:42.233263] Finding exact cover...
[2016-10-25 10:38:42.233301] Found:

Gurobi Optimizer version 6.5.0 build v6.5.0rc1 (mac64)
Copyright (c) 2015, Gurobi Optimization, Inc.

Read LP format model from file /var/folders/5c/0g9v9k4x76gcq3btks74_jpw0000gn/T/struct_tmpGKS6WR/inp.lp
Reading time = 0.01 seconds
(null): 378 rows, 285 columns, 20023 nonzeros
Optimize a model with 378 rows, 285 columns and 20023 nonzeros
Coefficient statistics:
  Matrix range    [1e+00, 1e+00]
  Objective range [1e+00, 1e+00]
  Bounds range    [1e+00, 1e+00]
  RHS range       [1e+00, 1e+00]
Found heuristic solution: objective 2
Presolve removed 378 rows and 285 columns
Presolve time: 0.03s
Presolve: All rows and columns removed

Explored 0 nodes (0 simplex iterations) in 0.04 seconds
Thread count was 1 (of 8 available processors)

Optimal solution found (tolerance 1.00e-04)
Best objective 2.000000000000e+00, best bound 2.000000000000e+00, gap 0.0%

Wrote result file '/var/folders/5c/0g9v9k4x76gcq3btks74_jpw0000gn/T/struct_tmpGKS6WR/out.sol'

[2016-10-25 10:38:42.362698] Index:
[2016-10-25 10:38:42.363357] Verifying cover [1, 283] up to length 10
[2016-10-25 10:38:42.363382] Multiple covers, but only using one for verification
[2016-10-25 10:38:50.791324] Cover verified up to length 10
[2016-10-25 10:38:50.791803] Cover verified
[2016-10-25 10:38:50.791832] (0, 'Av([[1, 2, 3], [1, 3, 2], [2, 1, 3], [3, 1, 2]])')
[2016-10-25 10:38:50.791847] (1, 'Av([[1, 2, 3], [1, 3, 2], [2, 1, 3]])')
[2016-10-25 10:38:50.791858] (2, 'Av([[1, 2, 3], [1, 3, 2], [3, 1, 2]])')
[2016-10-25 10:38:50.791867] (3, 'Av([[1, 2, 3], [1, 3, 2]])')
[2016-10-25 10:38:50.791877] (4, 'Av([[1, 2]])')
[2016-10-25 10:38:50.791887] (5, 'Av([[1, 3, 2], [2, 1, 3], [3, 1, 2]])')
[2016-10-25 10:38:50.791897] (6, 'Av([[1, 3, 2], [2, 1, 3]])')
[2016-10-25 10:38:50.791906] (7, 'Av([[1, 3, 2], [3, 1, 2]])')
[2016-10-25 10:38:50.791916] (8, 'Av([[2, 1]])')
[2016-10-25 10:38:50.791926] (9, 'input permutation set')
[2016-10-25 10:38:50.791936] (10, 'point permutation set')
[2016-10-25 10:38:50.791960] (11, 'None')
[1, 283]

  1: 
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001

+-+
| |
+-+

283: 
111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111110

+-+-+-+
|X| | |
+-+-+-+
| | |o|
+-+-+-+
| |1| |
+-+-+-+
1: Av([[1, 3, 2], [3, 1, 2]])

+-+-+-+
| |o| |
+-+-+-+
|1| | |
+-+-+-+
| | |X|
+-+-+-+
1: Av([[1, 3, 2], [3, 1, 2]])

Next verify_bound (or 0 to stop): 